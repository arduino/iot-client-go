/*
Arduino IoT Cloud API

Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
	"time"
)

// checks if the ArduinoDevicev2StatusEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArduinoDevicev2StatusEvent{}

// ArduinoDevicev2StatusEvent ArduinoDevicev2StatusEvent media type (default view)
type ArduinoDevicev2StatusEvent struct {
	// Update timestamp of the status event
	UpdatedAt time.Time `json:"updated_at"`
	// The status event of the device
	Value string `json:"value"`
}

// NewArduinoDevicev2StatusEvent instantiates a new ArduinoDevicev2StatusEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArduinoDevicev2StatusEvent(updatedAt time.Time, value string) *ArduinoDevicev2StatusEvent {
	this := ArduinoDevicev2StatusEvent{}
	this.UpdatedAt = updatedAt
	this.Value = value
	return &this
}

// NewArduinoDevicev2StatusEventWithDefaults instantiates a new ArduinoDevicev2StatusEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArduinoDevicev2StatusEventWithDefaults() *ArduinoDevicev2StatusEvent {
	this := ArduinoDevicev2StatusEvent{}
	return &this
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ArduinoDevicev2StatusEvent) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ArduinoDevicev2StatusEvent) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ArduinoDevicev2StatusEvent) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetValue returns the Value field value
func (o *ArduinoDevicev2StatusEvent) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ArduinoDevicev2StatusEvent) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *ArduinoDevicev2StatusEvent) SetValue(v string) {
	o.Value = v
}

func (o ArduinoDevicev2StatusEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArduinoDevicev2StatusEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableArduinoDevicev2StatusEvent struct {
	value *ArduinoDevicev2StatusEvent
	isSet bool
}

func (v NullableArduinoDevicev2StatusEvent) Get() *ArduinoDevicev2StatusEvent {
	return v.value
}

func (v *NullableArduinoDevicev2StatusEvent) Set(val *ArduinoDevicev2StatusEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableArduinoDevicev2StatusEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableArduinoDevicev2StatusEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArduinoDevicev2StatusEvent(val *ArduinoDevicev2StatusEvent) *NullableArduinoDevicev2StatusEvent {
	return &NullableArduinoDevicev2StatusEvent{value: val, isSet: true}
}

func (v NullableArduinoDevicev2StatusEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArduinoDevicev2StatusEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


