/*
Arduino IoT Cloud API

 Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the CreateLoraDevicesV1Payload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateLoraDevicesV1Payload{}

// CreateLoraDevicesV1Payload struct for CreateLoraDevicesV1Payload
type CreateLoraDevicesV1Payload struct {
	// The app name
	App string `json:"app"`
	// The app eui of the lora device
	AppEui *string `json:"app_eui,omitempty"`
	// The app key of the lora device
	AppKey *string `json:"app_key,omitempty"`
	// The eui of the lora device
	Eui string `json:"eui"`
	// The frequency plan required by your country 
	FrequencyPlan string `json:"frequency_plan"`
	// A common name for the device
	Name string `json:"name"`
	// The optional serial number
	Serial *string `json:"serial,omitempty"`
	// The type of device
	Type string `json:"type"`
	// The id of the user. Can be the special string 'me'
	UserId string `json:"user_id"`
}

// NewCreateLoraDevicesV1Payload instantiates a new CreateLoraDevicesV1Payload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLoraDevicesV1Payload(app string, eui string, frequencyPlan string, name string, type_ string, userId string) *CreateLoraDevicesV1Payload {
	this := CreateLoraDevicesV1Payload{}
	this.App = app
	this.Eui = eui
	this.FrequencyPlan = frequencyPlan
	this.Name = name
	this.Type = type_
	this.UserId = userId
	return &this
}

// NewCreateLoraDevicesV1PayloadWithDefaults instantiates a new CreateLoraDevicesV1Payload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLoraDevicesV1PayloadWithDefaults() *CreateLoraDevicesV1Payload {
	this := CreateLoraDevicesV1Payload{}
	return &this
}

// GetApp returns the App field value
func (o *CreateLoraDevicesV1Payload) GetApp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.App
}

// GetAppOk returns a tuple with the App field value
// and a boolean to check if the value has been set.
func (o *CreateLoraDevicesV1Payload) GetAppOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.App, true
}

// SetApp sets field value
func (o *CreateLoraDevicesV1Payload) SetApp(v string) {
	o.App = v
}

// GetAppEui returns the AppEui field value if set, zero value otherwise.
func (o *CreateLoraDevicesV1Payload) GetAppEui() string {
	if o == nil || IsNil(o.AppEui) {
		var ret string
		return ret
	}
	return *o.AppEui
}

// GetAppEuiOk returns a tuple with the AppEui field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoraDevicesV1Payload) GetAppEuiOk() (*string, bool) {
	if o == nil || IsNil(o.AppEui) {
		return nil, false
	}
	return o.AppEui, true
}

// HasAppEui returns a boolean if a field has been set.
func (o *CreateLoraDevicesV1Payload) HasAppEui() bool {
	if o != nil && !IsNil(o.AppEui) {
		return true
	}

	return false
}

// SetAppEui gets a reference to the given string and assigns it to the AppEui field.
func (o *CreateLoraDevicesV1Payload) SetAppEui(v string) {
	o.AppEui = &v
}

// GetAppKey returns the AppKey field value if set, zero value otherwise.
func (o *CreateLoraDevicesV1Payload) GetAppKey() string {
	if o == nil || IsNil(o.AppKey) {
		var ret string
		return ret
	}
	return *o.AppKey
}

// GetAppKeyOk returns a tuple with the AppKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoraDevicesV1Payload) GetAppKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AppKey) {
		return nil, false
	}
	return o.AppKey, true
}

// HasAppKey returns a boolean if a field has been set.
func (o *CreateLoraDevicesV1Payload) HasAppKey() bool {
	if o != nil && !IsNil(o.AppKey) {
		return true
	}

	return false
}

// SetAppKey gets a reference to the given string and assigns it to the AppKey field.
func (o *CreateLoraDevicesV1Payload) SetAppKey(v string) {
	o.AppKey = &v
}

// GetEui returns the Eui field value
func (o *CreateLoraDevicesV1Payload) GetEui() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Eui
}

// GetEuiOk returns a tuple with the Eui field value
// and a boolean to check if the value has been set.
func (o *CreateLoraDevicesV1Payload) GetEuiOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Eui, true
}

// SetEui sets field value
func (o *CreateLoraDevicesV1Payload) SetEui(v string) {
	o.Eui = v
}

// GetFrequencyPlan returns the FrequencyPlan field value
func (o *CreateLoraDevicesV1Payload) GetFrequencyPlan() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FrequencyPlan
}

// GetFrequencyPlanOk returns a tuple with the FrequencyPlan field value
// and a boolean to check if the value has been set.
func (o *CreateLoraDevicesV1Payload) GetFrequencyPlanOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FrequencyPlan, true
}

// SetFrequencyPlan sets field value
func (o *CreateLoraDevicesV1Payload) SetFrequencyPlan(v string) {
	o.FrequencyPlan = v
}

// GetName returns the Name field value
func (o *CreateLoraDevicesV1Payload) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateLoraDevicesV1Payload) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateLoraDevicesV1Payload) SetName(v string) {
	o.Name = v
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *CreateLoraDevicesV1Payload) GetSerial() string {
	if o == nil || IsNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoraDevicesV1Payload) GetSerialOk() (*string, bool) {
	if o == nil || IsNil(o.Serial) {
		return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *CreateLoraDevicesV1Payload) HasSerial() bool {
	if o != nil && !IsNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *CreateLoraDevicesV1Payload) SetSerial(v string) {
	o.Serial = &v
}

// GetType returns the Type field value
func (o *CreateLoraDevicesV1Payload) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateLoraDevicesV1Payload) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateLoraDevicesV1Payload) SetType(v string) {
	o.Type = v
}

// GetUserId returns the UserId field value
func (o *CreateLoraDevicesV1Payload) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *CreateLoraDevicesV1Payload) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *CreateLoraDevicesV1Payload) SetUserId(v string) {
	o.UserId = v
}

func (o CreateLoraDevicesV1Payload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateLoraDevicesV1Payload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["app"] = o.App
	if !IsNil(o.AppEui) {
		toSerialize["app_eui"] = o.AppEui
	}
	if !IsNil(o.AppKey) {
		toSerialize["app_key"] = o.AppKey
	}
	toSerialize["eui"] = o.Eui
	toSerialize["frequency_plan"] = o.FrequencyPlan
	toSerialize["name"] = o.Name
	if !IsNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	toSerialize["type"] = o.Type
	toSerialize["user_id"] = o.UserId
	return toSerialize, nil
}

type NullableCreateLoraDevicesV1Payload struct {
	value *CreateLoraDevicesV1Payload
	isSet bool
}

func (v NullableCreateLoraDevicesV1Payload) Get() *CreateLoraDevicesV1Payload {
	return v.value
}

func (v *NullableCreateLoraDevicesV1Payload) Set(val *CreateLoraDevicesV1Payload) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLoraDevicesV1Payload) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLoraDevicesV1Payload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLoraDevicesV1Payload(val *CreateLoraDevicesV1Payload) *NullableCreateLoraDevicesV1Payload {
	return &NullableCreateLoraDevicesV1Payload{value: val, isSet: true}
}

func (v NullableCreateLoraDevicesV1Payload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLoraDevicesV1Payload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


