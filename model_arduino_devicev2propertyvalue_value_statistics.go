/*
Arduino IoT Cloud API

 Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ArduinoDevicev2propertyvalueValueStatistics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArduinoDevicev2propertyvalueValueStatistics{}

// ArduinoDevicev2propertyvalueValueStatistics struct for ArduinoDevicev2propertyvalueValueStatistics
type ArduinoDevicev2propertyvalueValueStatistics struct {
	Adr *float64 `json:"adr,omitempty"`
	Channel *float64 `json:"channel,omitempty"`
	Duplicate *float64 `json:"duplicate,omitempty"`
	Freq *float64 `json:"freq,omitempty"`
	ModBW *float64 `json:"modBW,omitempty"`
	Rssi *float64 `json:"rssi,omitempty"`
	Seqno *float64 `json:"seqno,omitempty"`
	Sf *float64 `json:"sf,omitempty"`
	Snr *float64 `json:"snr,omitempty"`
	Time *float64 `json:"time,omitempty"`
}

// NewArduinoDevicev2propertyvalueValueStatistics instantiates a new ArduinoDevicev2propertyvalueValueStatistics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArduinoDevicev2propertyvalueValueStatistics() *ArduinoDevicev2propertyvalueValueStatistics {
	this := ArduinoDevicev2propertyvalueValueStatistics{}
	return &this
}

// NewArduinoDevicev2propertyvalueValueStatisticsWithDefaults instantiates a new ArduinoDevicev2propertyvalueValueStatistics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArduinoDevicev2propertyvalueValueStatisticsWithDefaults() *ArduinoDevicev2propertyvalueValueStatistics {
	this := ArduinoDevicev2propertyvalueValueStatistics{}
	return &this
}

// GetAdr returns the Adr field value if set, zero value otherwise.
func (o *ArduinoDevicev2propertyvalueValueStatistics) GetAdr() float64 {
	if o == nil || IsNil(o.Adr) {
		var ret float64
		return ret
	}
	return *o.Adr
}

// GetAdrOk returns a tuple with the Adr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoDevicev2propertyvalueValueStatistics) GetAdrOk() (*float64, bool) {
	if o == nil || IsNil(o.Adr) {
		return nil, false
	}
	return o.Adr, true
}

// HasAdr returns a boolean if a field has been set.
func (o *ArduinoDevicev2propertyvalueValueStatistics) HasAdr() bool {
	if o != nil && !IsNil(o.Adr) {
		return true
	}

	return false
}

// SetAdr gets a reference to the given float64 and assigns it to the Adr field.
func (o *ArduinoDevicev2propertyvalueValueStatistics) SetAdr(v float64) {
	o.Adr = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *ArduinoDevicev2propertyvalueValueStatistics) GetChannel() float64 {
	if o == nil || IsNil(o.Channel) {
		var ret float64
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoDevicev2propertyvalueValueStatistics) GetChannelOk() (*float64, bool) {
	if o == nil || IsNil(o.Channel) {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *ArduinoDevicev2propertyvalueValueStatistics) HasChannel() bool {
	if o != nil && !IsNil(o.Channel) {
		return true
	}

	return false
}

// SetChannel gets a reference to the given float64 and assigns it to the Channel field.
func (o *ArduinoDevicev2propertyvalueValueStatistics) SetChannel(v float64) {
	o.Channel = &v
}

// GetDuplicate returns the Duplicate field value if set, zero value otherwise.
func (o *ArduinoDevicev2propertyvalueValueStatistics) GetDuplicate() float64 {
	if o == nil || IsNil(o.Duplicate) {
		var ret float64
		return ret
	}
	return *o.Duplicate
}

// GetDuplicateOk returns a tuple with the Duplicate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoDevicev2propertyvalueValueStatistics) GetDuplicateOk() (*float64, bool) {
	if o == nil || IsNil(o.Duplicate) {
		return nil, false
	}
	return o.Duplicate, true
}

// HasDuplicate returns a boolean if a field has been set.
func (o *ArduinoDevicev2propertyvalueValueStatistics) HasDuplicate() bool {
	if o != nil && !IsNil(o.Duplicate) {
		return true
	}

	return false
}

// SetDuplicate gets a reference to the given float64 and assigns it to the Duplicate field.
func (o *ArduinoDevicev2propertyvalueValueStatistics) SetDuplicate(v float64) {
	o.Duplicate = &v
}

// GetFreq returns the Freq field value if set, zero value otherwise.
func (o *ArduinoDevicev2propertyvalueValueStatistics) GetFreq() float64 {
	if o == nil || IsNil(o.Freq) {
		var ret float64
		return ret
	}
	return *o.Freq
}

// GetFreqOk returns a tuple with the Freq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoDevicev2propertyvalueValueStatistics) GetFreqOk() (*float64, bool) {
	if o == nil || IsNil(o.Freq) {
		return nil, false
	}
	return o.Freq, true
}

// HasFreq returns a boolean if a field has been set.
func (o *ArduinoDevicev2propertyvalueValueStatistics) HasFreq() bool {
	if o != nil && !IsNil(o.Freq) {
		return true
	}

	return false
}

// SetFreq gets a reference to the given float64 and assigns it to the Freq field.
func (o *ArduinoDevicev2propertyvalueValueStatistics) SetFreq(v float64) {
	o.Freq = &v
}

// GetModBW returns the ModBW field value if set, zero value otherwise.
func (o *ArduinoDevicev2propertyvalueValueStatistics) GetModBW() float64 {
	if o == nil || IsNil(o.ModBW) {
		var ret float64
		return ret
	}
	return *o.ModBW
}

// GetModBWOk returns a tuple with the ModBW field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoDevicev2propertyvalueValueStatistics) GetModBWOk() (*float64, bool) {
	if o == nil || IsNil(o.ModBW) {
		return nil, false
	}
	return o.ModBW, true
}

// HasModBW returns a boolean if a field has been set.
func (o *ArduinoDevicev2propertyvalueValueStatistics) HasModBW() bool {
	if o != nil && !IsNil(o.ModBW) {
		return true
	}

	return false
}

// SetModBW gets a reference to the given float64 and assigns it to the ModBW field.
func (o *ArduinoDevicev2propertyvalueValueStatistics) SetModBW(v float64) {
	o.ModBW = &v
}

// GetRssi returns the Rssi field value if set, zero value otherwise.
func (o *ArduinoDevicev2propertyvalueValueStatistics) GetRssi() float64 {
	if o == nil || IsNil(o.Rssi) {
		var ret float64
		return ret
	}
	return *o.Rssi
}

// GetRssiOk returns a tuple with the Rssi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoDevicev2propertyvalueValueStatistics) GetRssiOk() (*float64, bool) {
	if o == nil || IsNil(o.Rssi) {
		return nil, false
	}
	return o.Rssi, true
}

// HasRssi returns a boolean if a field has been set.
func (o *ArduinoDevicev2propertyvalueValueStatistics) HasRssi() bool {
	if o != nil && !IsNil(o.Rssi) {
		return true
	}

	return false
}

// SetRssi gets a reference to the given float64 and assigns it to the Rssi field.
func (o *ArduinoDevicev2propertyvalueValueStatistics) SetRssi(v float64) {
	o.Rssi = &v
}

// GetSeqno returns the Seqno field value if set, zero value otherwise.
func (o *ArduinoDevicev2propertyvalueValueStatistics) GetSeqno() float64 {
	if o == nil || IsNil(o.Seqno) {
		var ret float64
		return ret
	}
	return *o.Seqno
}

// GetSeqnoOk returns a tuple with the Seqno field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoDevicev2propertyvalueValueStatistics) GetSeqnoOk() (*float64, bool) {
	if o == nil || IsNil(o.Seqno) {
		return nil, false
	}
	return o.Seqno, true
}

// HasSeqno returns a boolean if a field has been set.
func (o *ArduinoDevicev2propertyvalueValueStatistics) HasSeqno() bool {
	if o != nil && !IsNil(o.Seqno) {
		return true
	}

	return false
}

// SetSeqno gets a reference to the given float64 and assigns it to the Seqno field.
func (o *ArduinoDevicev2propertyvalueValueStatistics) SetSeqno(v float64) {
	o.Seqno = &v
}

// GetSf returns the Sf field value if set, zero value otherwise.
func (o *ArduinoDevicev2propertyvalueValueStatistics) GetSf() float64 {
	if o == nil || IsNil(o.Sf) {
		var ret float64
		return ret
	}
	return *o.Sf
}

// GetSfOk returns a tuple with the Sf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoDevicev2propertyvalueValueStatistics) GetSfOk() (*float64, bool) {
	if o == nil || IsNil(o.Sf) {
		return nil, false
	}
	return o.Sf, true
}

// HasSf returns a boolean if a field has been set.
func (o *ArduinoDevicev2propertyvalueValueStatistics) HasSf() bool {
	if o != nil && !IsNil(o.Sf) {
		return true
	}

	return false
}

// SetSf gets a reference to the given float64 and assigns it to the Sf field.
func (o *ArduinoDevicev2propertyvalueValueStatistics) SetSf(v float64) {
	o.Sf = &v
}

// GetSnr returns the Snr field value if set, zero value otherwise.
func (o *ArduinoDevicev2propertyvalueValueStatistics) GetSnr() float64 {
	if o == nil || IsNil(o.Snr) {
		var ret float64
		return ret
	}
	return *o.Snr
}

// GetSnrOk returns a tuple with the Snr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoDevicev2propertyvalueValueStatistics) GetSnrOk() (*float64, bool) {
	if o == nil || IsNil(o.Snr) {
		return nil, false
	}
	return o.Snr, true
}

// HasSnr returns a boolean if a field has been set.
func (o *ArduinoDevicev2propertyvalueValueStatistics) HasSnr() bool {
	if o != nil && !IsNil(o.Snr) {
		return true
	}

	return false
}

// SetSnr gets a reference to the given float64 and assigns it to the Snr field.
func (o *ArduinoDevicev2propertyvalueValueStatistics) SetSnr(v float64) {
	o.Snr = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *ArduinoDevicev2propertyvalueValueStatistics) GetTime() float64 {
	if o == nil || IsNil(o.Time) {
		var ret float64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoDevicev2propertyvalueValueStatistics) GetTimeOk() (*float64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *ArduinoDevicev2propertyvalueValueStatistics) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given float64 and assigns it to the Time field.
func (o *ArduinoDevicev2propertyvalueValueStatistics) SetTime(v float64) {
	o.Time = &v
}

func (o ArduinoDevicev2propertyvalueValueStatistics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArduinoDevicev2propertyvalueValueStatistics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Adr) {
		toSerialize["adr"] = o.Adr
	}
	if !IsNil(o.Channel) {
		toSerialize["channel"] = o.Channel
	}
	if !IsNil(o.Duplicate) {
		toSerialize["duplicate"] = o.Duplicate
	}
	if !IsNil(o.Freq) {
		toSerialize["freq"] = o.Freq
	}
	if !IsNil(o.ModBW) {
		toSerialize["modBW"] = o.ModBW
	}
	if !IsNil(o.Rssi) {
		toSerialize["rssi"] = o.Rssi
	}
	if !IsNil(o.Seqno) {
		toSerialize["seqno"] = o.Seqno
	}
	if !IsNil(o.Sf) {
		toSerialize["sf"] = o.Sf
	}
	if !IsNil(o.Snr) {
		toSerialize["snr"] = o.Snr
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	return toSerialize, nil
}

type NullableArduinoDevicev2propertyvalueValueStatistics struct {
	value *ArduinoDevicev2propertyvalueValueStatistics
	isSet bool
}

func (v NullableArduinoDevicev2propertyvalueValueStatistics) Get() *ArduinoDevicev2propertyvalueValueStatistics {
	return v.value
}

func (v *NullableArduinoDevicev2propertyvalueValueStatistics) Set(val *ArduinoDevicev2propertyvalueValueStatistics) {
	v.value = val
	v.isSet = true
}

func (v NullableArduinoDevicev2propertyvalueValueStatistics) IsSet() bool {
	return v.isSet
}

func (v *NullableArduinoDevicev2propertyvalueValueStatistics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArduinoDevicev2propertyvalueValueStatistics(val *ArduinoDevicev2propertyvalueValueStatistics) *NullableArduinoDevicev2propertyvalueValueStatistics {
	return &NullableArduinoDevicev2propertyvalueValueStatistics{value: val, isSet: true}
}

func (v NullableArduinoDevicev2propertyvalueValueStatistics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArduinoDevicev2propertyvalueValueStatistics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


