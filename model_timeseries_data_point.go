/*
Arduino IoT Cloud API

 Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iot

import (
	"encoding/json"
	"time"
)

// checks if the TimeseriesDataPoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeseriesDataPoint{}

// TimeseriesDataPoint struct for TimeseriesDataPoint
type TimeseriesDataPoint struct {
	// Binning timestamp
	Time time.Time `json:"time"`
	// Avg value on the binning interval
	Value float64 `json:"value"`
}

// NewTimeseriesDataPoint instantiates a new TimeseriesDataPoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeseriesDataPoint(time time.Time, value float64) *TimeseriesDataPoint {
	this := TimeseriesDataPoint{}
	this.Time = time
	this.Value = value
	return &this
}

// NewTimeseriesDataPointWithDefaults instantiates a new TimeseriesDataPoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeseriesDataPointWithDefaults() *TimeseriesDataPoint {
	this := TimeseriesDataPoint{}
	return &this
}

// GetTime returns the Time field value
func (o *TimeseriesDataPoint) GetTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *TimeseriesDataPoint) GetTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *TimeseriesDataPoint) SetTime(v time.Time) {
	o.Time = v
}

// GetValue returns the Value field value
func (o *TimeseriesDataPoint) GetValue() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *TimeseriesDataPoint) GetValueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *TimeseriesDataPoint) SetValue(v float64) {
	o.Value = v
}

func (o TimeseriesDataPoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeseriesDataPoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["time"] = o.Time
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableTimeseriesDataPoint struct {
	value *TimeseriesDataPoint
	isSet bool
}

func (v NullableTimeseriesDataPoint) Get() *TimeseriesDataPoint {
	return v.value
}

func (v *NullableTimeseriesDataPoint) Set(val *TimeseriesDataPoint) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeseriesDataPoint) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeseriesDataPoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeseriesDataPoint(val *TimeseriesDataPoint) *NullableTimeseriesDataPoint {
	return &NullableTimeseriesDataPoint{value: val, isSet: true}
}

func (v NullableTimeseriesDataPoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeseriesDataPoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


