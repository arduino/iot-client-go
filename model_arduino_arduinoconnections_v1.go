/*
Arduino IoT Cloud API

Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the ArduinoArduinoconnectionsV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArduinoArduinoconnectionsV1{}

// ArduinoArduinoconnectionsV1 ArduinoArduinoconnectionsV1 media type (default view)
type ArduinoArduinoconnectionsV1 struct {
	// ArduinoCredentialsv1Collection is the media type for an array of ArduinoCredentialsv1 (default view)
	Catm1 []ArduinoCredentialsv1 `json:"catm1,omitempty"`
	// ArduinoCredentialsv1Collection is the media type for an array of ArduinoCredentialsv1 (default view)
	Cellular []ArduinoCredentialsv1 `json:"cellular,omitempty"`
	// ArduinoCredentialsv1Collection is the media type for an array of ArduinoCredentialsv1 (default view)
	Eth []ArduinoCredentialsv1 `json:"eth,omitempty"`
	// ArduinoCredentialsv1Collection is the media type for an array of ArduinoCredentialsv1 (default view)
	Gsm []ArduinoCredentialsv1 `json:"gsm,omitempty"`
	// ArduinoCredentialsv1Collection is the media type for an array of ArduinoCredentialsv1 (default view)
	Lora []ArduinoCredentialsv1 `json:"lora,omitempty"`
	// ArduinoCredentialsv1Collection is the media type for an array of ArduinoCredentialsv1 (default view)
	Nb []ArduinoCredentialsv1 `json:"nb,omitempty"`
	// ArduinoCredentialsv1Collection is the media type for an array of ArduinoCredentialsv1 (default view)
	Wifi []ArduinoCredentialsv1 `json:"wifi,omitempty"`
	// ArduinoCredentialsv1Collection is the media type for an array of ArduinoCredentialsv1 (default view)
	Wifiandsecret []ArduinoCredentialsv1 `json:"wifiandsecret,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ArduinoArduinoconnectionsV1 ArduinoArduinoconnectionsV1

// NewArduinoArduinoconnectionsV1 instantiates a new ArduinoArduinoconnectionsV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArduinoArduinoconnectionsV1() *ArduinoArduinoconnectionsV1 {
	this := ArduinoArduinoconnectionsV1{}
	return &this
}

// NewArduinoArduinoconnectionsV1WithDefaults instantiates a new ArduinoArduinoconnectionsV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArduinoArduinoconnectionsV1WithDefaults() *ArduinoArduinoconnectionsV1 {
	this := ArduinoArduinoconnectionsV1{}
	return &this
}

// GetCatm1 returns the Catm1 field value if set, zero value otherwise.
func (o *ArduinoArduinoconnectionsV1) GetCatm1() []ArduinoCredentialsv1 {
	if o == nil || IsNil(o.Catm1) {
		var ret []ArduinoCredentialsv1
		return ret
	}
	return o.Catm1
}

// GetCatm1Ok returns a tuple with the Catm1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoArduinoconnectionsV1) GetCatm1Ok() ([]ArduinoCredentialsv1, bool) {
	if o == nil || IsNil(o.Catm1) {
		return nil, false
	}
	return o.Catm1, true
}

// HasCatm1 returns a boolean if a field has been set.
func (o *ArduinoArduinoconnectionsV1) HasCatm1() bool {
	if o != nil && !IsNil(o.Catm1) {
		return true
	}

	return false
}

// SetCatm1 gets a reference to the given []ArduinoCredentialsv1 and assigns it to the Catm1 field.
func (o *ArduinoArduinoconnectionsV1) SetCatm1(v []ArduinoCredentialsv1) {
	o.Catm1 = v
}

// GetCellular returns the Cellular field value if set, zero value otherwise.
func (o *ArduinoArduinoconnectionsV1) GetCellular() []ArduinoCredentialsv1 {
	if o == nil || IsNil(o.Cellular) {
		var ret []ArduinoCredentialsv1
		return ret
	}
	return o.Cellular
}

// GetCellularOk returns a tuple with the Cellular field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoArduinoconnectionsV1) GetCellularOk() ([]ArduinoCredentialsv1, bool) {
	if o == nil || IsNil(o.Cellular) {
		return nil, false
	}
	return o.Cellular, true
}

// HasCellular returns a boolean if a field has been set.
func (o *ArduinoArduinoconnectionsV1) HasCellular() bool {
	if o != nil && !IsNil(o.Cellular) {
		return true
	}

	return false
}

// SetCellular gets a reference to the given []ArduinoCredentialsv1 and assigns it to the Cellular field.
func (o *ArduinoArduinoconnectionsV1) SetCellular(v []ArduinoCredentialsv1) {
	o.Cellular = v
}

// GetEth returns the Eth field value if set, zero value otherwise.
func (o *ArduinoArduinoconnectionsV1) GetEth() []ArduinoCredentialsv1 {
	if o == nil || IsNil(o.Eth) {
		var ret []ArduinoCredentialsv1
		return ret
	}
	return o.Eth
}

// GetEthOk returns a tuple with the Eth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoArduinoconnectionsV1) GetEthOk() ([]ArduinoCredentialsv1, bool) {
	if o == nil || IsNil(o.Eth) {
		return nil, false
	}
	return o.Eth, true
}

// HasEth returns a boolean if a field has been set.
func (o *ArduinoArduinoconnectionsV1) HasEth() bool {
	if o != nil && !IsNil(o.Eth) {
		return true
	}

	return false
}

// SetEth gets a reference to the given []ArduinoCredentialsv1 and assigns it to the Eth field.
func (o *ArduinoArduinoconnectionsV1) SetEth(v []ArduinoCredentialsv1) {
	o.Eth = v
}

// GetGsm returns the Gsm field value if set, zero value otherwise.
func (o *ArduinoArduinoconnectionsV1) GetGsm() []ArduinoCredentialsv1 {
	if o == nil || IsNil(o.Gsm) {
		var ret []ArduinoCredentialsv1
		return ret
	}
	return o.Gsm
}

// GetGsmOk returns a tuple with the Gsm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoArduinoconnectionsV1) GetGsmOk() ([]ArduinoCredentialsv1, bool) {
	if o == nil || IsNil(o.Gsm) {
		return nil, false
	}
	return o.Gsm, true
}

// HasGsm returns a boolean if a field has been set.
func (o *ArduinoArduinoconnectionsV1) HasGsm() bool {
	if o != nil && !IsNil(o.Gsm) {
		return true
	}

	return false
}

// SetGsm gets a reference to the given []ArduinoCredentialsv1 and assigns it to the Gsm field.
func (o *ArduinoArduinoconnectionsV1) SetGsm(v []ArduinoCredentialsv1) {
	o.Gsm = v
}

// GetLora returns the Lora field value if set, zero value otherwise.
func (o *ArduinoArduinoconnectionsV1) GetLora() []ArduinoCredentialsv1 {
	if o == nil || IsNil(o.Lora) {
		var ret []ArduinoCredentialsv1
		return ret
	}
	return o.Lora
}

// GetLoraOk returns a tuple with the Lora field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoArduinoconnectionsV1) GetLoraOk() ([]ArduinoCredentialsv1, bool) {
	if o == nil || IsNil(o.Lora) {
		return nil, false
	}
	return o.Lora, true
}

// HasLora returns a boolean if a field has been set.
func (o *ArduinoArduinoconnectionsV1) HasLora() bool {
	if o != nil && !IsNil(o.Lora) {
		return true
	}

	return false
}

// SetLora gets a reference to the given []ArduinoCredentialsv1 and assigns it to the Lora field.
func (o *ArduinoArduinoconnectionsV1) SetLora(v []ArduinoCredentialsv1) {
	o.Lora = v
}

// GetNb returns the Nb field value if set, zero value otherwise.
func (o *ArduinoArduinoconnectionsV1) GetNb() []ArduinoCredentialsv1 {
	if o == nil || IsNil(o.Nb) {
		var ret []ArduinoCredentialsv1
		return ret
	}
	return o.Nb
}

// GetNbOk returns a tuple with the Nb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoArduinoconnectionsV1) GetNbOk() ([]ArduinoCredentialsv1, bool) {
	if o == nil || IsNil(o.Nb) {
		return nil, false
	}
	return o.Nb, true
}

// HasNb returns a boolean if a field has been set.
func (o *ArduinoArduinoconnectionsV1) HasNb() bool {
	if o != nil && !IsNil(o.Nb) {
		return true
	}

	return false
}

// SetNb gets a reference to the given []ArduinoCredentialsv1 and assigns it to the Nb field.
func (o *ArduinoArduinoconnectionsV1) SetNb(v []ArduinoCredentialsv1) {
	o.Nb = v
}

// GetWifi returns the Wifi field value if set, zero value otherwise.
func (o *ArduinoArduinoconnectionsV1) GetWifi() []ArduinoCredentialsv1 {
	if o == nil || IsNil(o.Wifi) {
		var ret []ArduinoCredentialsv1
		return ret
	}
	return o.Wifi
}

// GetWifiOk returns a tuple with the Wifi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoArduinoconnectionsV1) GetWifiOk() ([]ArduinoCredentialsv1, bool) {
	if o == nil || IsNil(o.Wifi) {
		return nil, false
	}
	return o.Wifi, true
}

// HasWifi returns a boolean if a field has been set.
func (o *ArduinoArduinoconnectionsV1) HasWifi() bool {
	if o != nil && !IsNil(o.Wifi) {
		return true
	}

	return false
}

// SetWifi gets a reference to the given []ArduinoCredentialsv1 and assigns it to the Wifi field.
func (o *ArduinoArduinoconnectionsV1) SetWifi(v []ArduinoCredentialsv1) {
	o.Wifi = v
}

// GetWifiandsecret returns the Wifiandsecret field value if set, zero value otherwise.
func (o *ArduinoArduinoconnectionsV1) GetWifiandsecret() []ArduinoCredentialsv1 {
	if o == nil || IsNil(o.Wifiandsecret) {
		var ret []ArduinoCredentialsv1
		return ret
	}
	return o.Wifiandsecret
}

// GetWifiandsecretOk returns a tuple with the Wifiandsecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoArduinoconnectionsV1) GetWifiandsecretOk() ([]ArduinoCredentialsv1, bool) {
	if o == nil || IsNil(o.Wifiandsecret) {
		return nil, false
	}
	return o.Wifiandsecret, true
}

// HasWifiandsecret returns a boolean if a field has been set.
func (o *ArduinoArduinoconnectionsV1) HasWifiandsecret() bool {
	if o != nil && !IsNil(o.Wifiandsecret) {
		return true
	}

	return false
}

// SetWifiandsecret gets a reference to the given []ArduinoCredentialsv1 and assigns it to the Wifiandsecret field.
func (o *ArduinoArduinoconnectionsV1) SetWifiandsecret(v []ArduinoCredentialsv1) {
	o.Wifiandsecret = v
}

func (o ArduinoArduinoconnectionsV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArduinoArduinoconnectionsV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Catm1) {
		toSerialize["catm1"] = o.Catm1
	}
	if !IsNil(o.Cellular) {
		toSerialize["cellular"] = o.Cellular
	}
	if !IsNil(o.Eth) {
		toSerialize["eth"] = o.Eth
	}
	if !IsNil(o.Gsm) {
		toSerialize["gsm"] = o.Gsm
	}
	if !IsNil(o.Lora) {
		toSerialize["lora"] = o.Lora
	}
	if !IsNil(o.Nb) {
		toSerialize["nb"] = o.Nb
	}
	if !IsNil(o.Wifi) {
		toSerialize["wifi"] = o.Wifi
	}
	if !IsNil(o.Wifiandsecret) {
		toSerialize["wifiandsecret"] = o.Wifiandsecret
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ArduinoArduinoconnectionsV1) UnmarshalJSON(data []byte) (err error) {
	varArduinoArduinoconnectionsV1 := _ArduinoArduinoconnectionsV1{}

	err = json.Unmarshal(data, &varArduinoArduinoconnectionsV1)

	if err != nil {
		return err
	}

	*o = ArduinoArduinoconnectionsV1(varArduinoArduinoconnectionsV1)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "catm1")
		delete(additionalProperties, "cellular")
		delete(additionalProperties, "eth")
		delete(additionalProperties, "gsm")
		delete(additionalProperties, "lora")
		delete(additionalProperties, "nb")
		delete(additionalProperties, "wifi")
		delete(additionalProperties, "wifiandsecret")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableArduinoArduinoconnectionsV1 struct {
	value *ArduinoArduinoconnectionsV1
	isSet bool
}

func (v NullableArduinoArduinoconnectionsV1) Get() *ArduinoArduinoconnectionsV1 {
	return v.value
}

func (v *NullableArduinoArduinoconnectionsV1) Set(val *ArduinoArduinoconnectionsV1) {
	v.value = val
	v.isSet = true
}

func (v NullableArduinoArduinoconnectionsV1) IsSet() bool {
	return v.isSet
}

func (v *NullableArduinoArduinoconnectionsV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArduinoArduinoconnectionsV1(val *ArduinoArduinoconnectionsV1) *NullableArduinoArduinoconnectionsV1 {
	return &NullableArduinoArduinoconnectionsV1{value: val, isSet: true}
}

func (v NullableArduinoArduinoconnectionsV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArduinoArduinoconnectionsV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


