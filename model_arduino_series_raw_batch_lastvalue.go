/*
Arduino IoT Cloud API

Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
	"fmt"
)

// checks if the ArduinoSeriesRawBatchLastvalue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArduinoSeriesRawBatchLastvalue{}

// ArduinoSeriesRawBatchLastvalue ArduinoSeriesRawBatchLastvalue media type (default view)
type ArduinoSeriesRawBatchLastvalue struct {
	// Responses of the request
	Responses []ArduinoSeriesRawLastValueResponse `json:"responses"`
	// Status of the response
	Status string `json:"status"`
	AdditionalProperties map[string]interface{}
}

type _ArduinoSeriesRawBatchLastvalue ArduinoSeriesRawBatchLastvalue

// NewArduinoSeriesRawBatchLastvalue instantiates a new ArduinoSeriesRawBatchLastvalue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArduinoSeriesRawBatchLastvalue(responses []ArduinoSeriesRawLastValueResponse, status string) *ArduinoSeriesRawBatchLastvalue {
	this := ArduinoSeriesRawBatchLastvalue{}
	this.Responses = responses
	this.Status = status
	return &this
}

// NewArduinoSeriesRawBatchLastvalueWithDefaults instantiates a new ArduinoSeriesRawBatchLastvalue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArduinoSeriesRawBatchLastvalueWithDefaults() *ArduinoSeriesRawBatchLastvalue {
	this := ArduinoSeriesRawBatchLastvalue{}
	return &this
}

// GetResponses returns the Responses field value
func (o *ArduinoSeriesRawBatchLastvalue) GetResponses() []ArduinoSeriesRawLastValueResponse {
	if o == nil {
		var ret []ArduinoSeriesRawLastValueResponse
		return ret
	}

	return o.Responses
}

// GetResponsesOk returns a tuple with the Responses field value
// and a boolean to check if the value has been set.
func (o *ArduinoSeriesRawBatchLastvalue) GetResponsesOk() ([]ArduinoSeriesRawLastValueResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Responses, true
}

// SetResponses sets field value
func (o *ArduinoSeriesRawBatchLastvalue) SetResponses(v []ArduinoSeriesRawLastValueResponse) {
	o.Responses = v
}

// GetStatus returns the Status field value
func (o *ArduinoSeriesRawBatchLastvalue) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ArduinoSeriesRawBatchLastvalue) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ArduinoSeriesRawBatchLastvalue) SetStatus(v string) {
	o.Status = v
}

func (o ArduinoSeriesRawBatchLastvalue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArduinoSeriesRawBatchLastvalue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["responses"] = o.Responses
	toSerialize["status"] = o.Status

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ArduinoSeriesRawBatchLastvalue) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"responses",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varArduinoSeriesRawBatchLastvalue := _ArduinoSeriesRawBatchLastvalue{}

	err = json.Unmarshal(data, &varArduinoSeriesRawBatchLastvalue)

	if err != nil {
		return err
	}

	*o = ArduinoSeriesRawBatchLastvalue(varArduinoSeriesRawBatchLastvalue)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "responses")
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableArduinoSeriesRawBatchLastvalue struct {
	value *ArduinoSeriesRawBatchLastvalue
	isSet bool
}

func (v NullableArduinoSeriesRawBatchLastvalue) Get() *ArduinoSeriesRawBatchLastvalue {
	return v.value
}

func (v *NullableArduinoSeriesRawBatchLastvalue) Set(val *ArduinoSeriesRawBatchLastvalue) {
	v.value = val
	v.isSet = true
}

func (v NullableArduinoSeriesRawBatchLastvalue) IsSet() bool {
	return v.isSet
}

func (v *NullableArduinoSeriesRawBatchLastvalue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArduinoSeriesRawBatchLastvalue(val *ArduinoSeriesRawBatchLastvalue) *NullableArduinoSeriesRawBatchLastvalue {
	return &NullableArduinoSeriesRawBatchLastvalue{value: val, isSet: true}
}

func (v NullableArduinoSeriesRawBatchLastvalue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArduinoSeriesRawBatchLastvalue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


