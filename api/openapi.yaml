openapi: 3.0.3
info:
  description: |2-

    Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:

    * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)

    * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)

    * [Golang Module](https://github.com/arduino/iot-client-go)
  title: Arduino IoT Cloud API
  version: "2.0"
servers:
- url: https://api2.arduino.cc/iot
paths:
  /v1/lora-devices/:
    put:
      description: Create a new lora device. Its info are saved on our database, and
        on the lora provider network. Creates a device_v2 automatically
      operationId: lora_devices_v1#create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLoraDevicesV1Payload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateLoraDevicesV1Payload'
        required: true
        x-originalParamName: payload
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoLoradevicev1'
          description: Created
      summary: create lora_devices_v1
      tags:
      - lora_devices_v1
  /v1/lora-freq-plans/:
    get:
      description: List the lora frequency plans supported
      operationId: lora_freq_plan_v1#list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoLorafreqplansv1'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      summary: list lora_freq_plan_v1
      tags:
      - lora_freq_plan_v1
  /v2/dashboards:
    get:
      description: Returns the list of dashboards
      operationId: dashboards_v2#list
      parameters:
      - description: The name of the dashboard
        explode: true
        in: query
        name: name
        required: false
        schema:
          maxLength: 64
          pattern: '[a-zA-Z0-9_.@-]+'
          type: string
        style: form
      - description: The user_id of the dashboard's owner
        explode: true
        in: query
        name: user_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoDashboardv2Collection'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      summary: list dashboards_v2
      tags:
      - dashboards_v2
    post:
      description: Create a new dashboard
      operationId: dashboards_v2#create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dashboardv2'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/dashboardv2'
        description: DashboardV2Payload describes a dashboard
        required: true
        x-originalParamName: payload
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoDashboardv2'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      summary: create dashboards_v2
      tags:
      - dashboards_v2
  /v2/dashboards/{id}:
    delete:
      description: Delete a dashboard
      operationId: dashboards_v2#delete
      parameters:
      - description: The id of the dashboard
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      summary: delete dashboards_v2
      tags:
      - dashboards_v2
    get:
      description: Show a dashboard
      operationId: dashboards_v2#show
      parameters:
      - description: The id of the dashboard
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoDashboardv2'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      summary: show dashboards_v2
      tags:
      - dashboards_v2
    put:
      description: Updates an existing dashboard
      operationId: dashboards_v2#update
      parameters:
      - description: The id of the dashboard
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dashboardv2'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/dashboardv2'
        description: DashboardV2Payload describes a dashboard
        required: true
        x-originalParamName: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoDashboardv2'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      summary: update dashboards_v2
      tags:
      - dashboards_v2
  /v2/dashboards/{id}/share_request:
    put:
      description: Request access to a dashboard
      operationId: dashboards_v2#requestAccess
      parameters:
      - description: The id of the dashboard
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sharerequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/sharerequest'
        required: true
        x-originalParamName: payload
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      summary: requestAccess dashboards_v2
      tags:
      - dashboards_v2
  /v2/dashboards/{id}/shares:
    get:
      description: List of users the dashboard has been shared with
      operationId: dashboards_v2#listShares
      parameters:
      - description: The id of the dashboard
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoDashboardshareCollection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      summary: listShares dashboards_v2
      tags:
      - dashboards_v2
    put:
      description: Share a dashboard
      operationId: dashboards_v2#share
      parameters:
      - description: The id of the dashboard
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dashboardshare'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/dashboardshare'
        required: true
        x-originalParamName: payload
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      summary: share dashboards_v2
      tags:
      - dashboards_v2
  /v2/dashboards/{id}/shares/{user_id}:
    delete:
      description: Delete a user the dashboard has been shared with
      operationId: dashboards_v2#deleteShare
      parameters:
      - description: The id of the dashboard
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the user
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      summary: deleteShare dashboards_v2
      tags:
      - dashboards_v2
  /v2/dashboards/{id}/widgets/{widgetId}/variables:
    put:
      description: Link or detach widget variables
      operationId: dashboards_v2#link
      parameters:
      - description: The id of the dashboard
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the widget
        explode: false
        in: path
        name: widgetId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/widgetlink'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/widgetlink'
        required: true
        x-originalParamName: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoVariableslinks'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      summary: link dashboards_v2
      tags:
      - dashboards_v2
  /v2/devices:
    get:
      description: Returns the list of devices associated to the user
      operationId: devices_v2#list
      parameters:
      - description: If true, returns all the devices
        explode: true
        in: query
        name: across_user_ids
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Filter by device serial number
        explode: true
        in: query
        name: serial
        required: false
        schema:
          type: string
        style: form
      - description: Filter by tags
        explode: true
        in: query
        name: tags
        required: false
        schema:
          items:
            maxLength: 129
            pattern: ^[a-zA-Z0-9_.@-]+:[a-zA-Z0-9_.@-]+$
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoDevicev2Collection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: list devices_v2
      tags:
      - devices_v2
    put:
      description: Creates a new device associated to the user.
      operationId: devices_v2#create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDevicesV2Payload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateDevicesV2Payload'
        description: DeviceV2 describes a device.
        required: true
        x-originalParamName: payload
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoDevicev2'
          description: Created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Precondition Failed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: create devices_v2
      tags:
      - devices_v2
  /v2/devices/{id}:
    delete:
      description: Removes a device associated to the user
      operationId: devices_v2#delete
      parameters:
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: delete devices_v2
      tags:
      - devices_v2
    get:
      description: Returns the device requested by the user
      operationId: devices_v2#show
      parameters:
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoDevicev2'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: show devices_v2
      tags:
      - devices_v2
    post:
      description: Updates a device associated to the user
      operationId: devices_v2#update
      parameters:
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/devicev2'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/devicev2'
        description: DeviceV2 describes a device.
        required: true
        x-originalParamName: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoDevicev2'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Precondition Failed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: update devices_v2
      tags:
      - devices_v2
  /v2/devices/{id}/certs:
    get:
      description: Returns the list of certs associated to the device
      operationId: devices_v2_certs#list
      parameters:
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoDevicev2CertCollection'
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: list devices_v2_certs
      tags:
      - devices_v2_certs
    put:
      description: Creates a new cert associated to a device. The csr is signed and
        saved in database. The CommonName will be replaced with the device id.
      operationId: devices_v2_certs#create
      parameters:
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDevicesV2CertsPayload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateDevicesV2CertsPayload'
        required: true
        x-originalParamName: payload
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoDevicev2Cert'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: create devices_v2_certs
      tags:
      - devices_v2_certs
  /v2/devices/{id}/certs/{cid}:
    delete:
      description: Removes a cert associated to a device
      operationId: devices_v2_certs#delete
      parameters:
      - description: The id of the cert
        explode: false
        in: path
        name: cid
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: delete devices_v2_certs
      tags:
      - devices_v2_certs
    get:
      description: Returns the cert requested by the user
      operationId: devices_v2_certs#show
      parameters:
      - description: The id of the cert
        explode: false
        in: path
        name: cid
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoDevicev2Cert'
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: show devices_v2_certs
      tags:
      - devices_v2_certs
    post:
      description: Updates a cert associated to a device. The csr is signed and saved
        in database. The CommonName will be replaced with the device id.
      operationId: devices_v2_certs#update
      parameters:
      - description: The id of the cert
        explode: false
        in: path
        name: cid
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/devicev2.cert'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/devicev2.cert'
        required: true
        x-originalParamName: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoDevicev2Cert'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: update devices_v2_certs
      tags:
      - devices_v2_certs
  /v2/devices/{id}/events:
    get:
      description: GET device events
      operationId: devices_v2#getEvents
      parameters:
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of events to select
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The time at which to start selecting events
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoDevicev2EventProperties'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Service Unavailable
      security:
      - oauth2: []
      summary: getEvents devices_v2
      tags:
      - devices_v2
  /v2/devices/{id}/ota:
    post:
      description: Upload a binary and send it to a device
      operationId: devices_v2_ota#upload
      parameters:
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          multipart/form-data:
            schema:
              properties:
                async:
                  default: true
                  description: If false, wait for the full OTA process, until it gets
                    a result from the device
                  type: boolean
                  x-formData-name: async
                expire_in_mins:
                  default: 10
                  description: Binary expire time in minutes, default 10 mins
                  type: integer
                  x-formData-name: expire_in_mins
                ota_file:
                  description: OTA file
                  format: binary
                  required:
                  - ota_file
                  type: string
                  x-formData-name: ota_file
              required:
              - ota_file
              type: object
      responses:
        "200":
          description: OK
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Not Found
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Gone
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Precondition Failed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: upload devices_v2_ota
      tags:
      - devices_v2_ota
    put:
      description: Send a binary url to a device
      operationId: devices_v2_ota#send
      parameters:
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/devicev2.otabinaryurl'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/devicev2.otabinaryurl'
        required: true
        x-originalParamName: payload
      responses:
        "200":
          description: OK
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Not Found
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Gone
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Precondition Failed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: send devices_v2_ota
      tags:
      - devices_v2_ota
  /v2/devices/{id}/pass:
    delete:
      description: Removes the password for the device.
      operationId: devices_v2_pass#delete
      parameters:
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: delete devices_v2_pass
      tags:
      - devices_v2_pass
    get:
      description: Returns whether the password for this device is set or not. It
        doesn't return the password.
      operationId: devices_v2_pass#get
      parameters:
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: If true, return a suggested password
        explode: true
        in: query
        name: suggested_password
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoDevicev2Pass'
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: get devices_v2_pass
      tags:
      - devices_v2_pass
    post:
      description: Check if the password matches.
      operationId: devices_v2_pass#check
      parameters:
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckDevicesV2PassPayload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CheckDevicesV2PassPayload'
        required: true
        x-originalParamName: payload
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: check devices_v2_pass
      tags:
      - devices_v2_pass
    put:
      description: Sets the password for the device. It can never be read back.
      operationId: devices_v2_pass#set
      parameters:
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/devicev2.pass'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/devicev2.pass'
        required: true
        x-originalParamName: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoDevicev2Pass'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: set devices_v2_pass
      tags:
      - devices_v2_pass
  /v2/devices/{id}/properties:
    get:
      description: GET device properties
      operationId: devices_v2#getProperties
      parameters:
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: If true, shows the soft deleted properties
        explode: true
        in: query
        name: show_deleted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoDevicev2properties'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: getProperties devices_v2
      tags:
      - devices_v2
    put:
      description: Update device properties last values
      operationId: devices_v2#updateProperties
      parameters:
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/propertiesValues'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/propertiesValues'
        required: true
        x-originalParamName: payload
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: updateProperties devices_v2
      tags:
      - devices_v2
  /v2/devices/{id}/properties/{pid}:
    get:
      description: GET device properties values in a range of time
      operationId: devices_v2#timeseries
      parameters:
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of properties to select
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The id of the property
        explode: false
        in: path
        name: pid
        required: true
        schema:
          type: string
        style: simple
      - description: The time at which to start selecting properties
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoDevicev2propertyvalues'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: timeseries devices_v2
      tags:
      - devices_v2
  /v2/devices/{id}/tags:
    get:
      description: List tags associated to the device.
      operationId: devices_v2_tags#list
      parameters:
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoTags'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: list devices_v2_tags
      tags:
      - devices_v2_tags
    put:
      description: Creates or updates a tag associated to the device.
      operationId: devices_v2_tags#upsert
      parameters:
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
        x-originalParamName: payload
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: upsert devices_v2_tags
      tags:
      - devices_v2_tags
  /v2/devices/{id}/tags/{key}:
    delete:
      description: Delete a tag associated to the device given its key.
      operationId: devices_v2_tags#delete
      parameters:
      - description: The id of the device
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The key of the tag
        explode: false
        in: path
        name: key
        required: true
        schema:
          maxLength: 64
          pattern: ^[a-zA-Z0-9_.@-]+$
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: delete devices_v2_tags
      tags:
      - devices_v2_tags
  /v2/series/batch_query:
    post:
      description: Returns the batch of time-series data
      operationId: series_v2#batch_query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchQueryRequestsMediaV1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchQueryRequestsMediaV1'
        required: true
        x-originalParamName: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoSeriesBatch'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "404":
          description: Not Found
        "501":
          description: Not Implemented
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Service Unavailable
      security:
      - oauth2: []
      summary: batch_query series_v2
      tags:
      - series_v2
  /v2/series/batch_query_raw:
    post:
      description: Returns the batch of time-series data raw
      operationId: series_v2#batch_query_raw
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchQueryRawRequestsMediaV1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchQueryRawRequestsMediaV1'
        required: true
        x-originalParamName: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoSeriesRawBatch'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "404":
          description: Not Found
        "501":
          description: Not Implemented
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Service Unavailable
      security:
      - oauth2: []
      summary: batch_query_raw series_v2
      tags:
      - series_v2
  /v2/series/batch_query_raw/lastvalue:
    post:
      description: Returns the batch of time-series data raw
      operationId: series_v2#batch_query_raw_last_value
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchLastValueRequestsMediaV1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchLastValueRequestsMediaV1'
        required: true
        x-originalParamName: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoSeriesRawBatchLastvalue'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "404":
          description: Not Found
        "501":
          description: Not Implemented
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Service Unavailable
      security:
      - oauth2: []
      summary: batch_query_raw_last_value series_v2
      tags:
      - series_v2
  /v2/series/historic_data:
    post:
      description: Request sending of historical data of properties by email
      operationId: series_v2#historic_data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HistoricDataRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HistoricDataRequest'
        required: true
        x-originalParamName: payload
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: historic_data series_v2
      tags:
      - series_v2
  /v2/things:
    get:
      description: Returns the list of things associated to the user
      operationId: things_v2#list
      parameters:
      - description: If true, returns all the things
        explode: true
        in: query
        name: across_user_ids
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: The id of the device you want to filter
        explode: true
        in: query
        name: device_id
        required: false
        schema:
          type: string
        style: form
      - description: Filter only the desired things
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true, shows the soft deleted things
        explode: true
        in: query
        name: show_deleted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: If true, returns things with their properties, and last values
        explode: true
        in: query
        name: show_properties
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Filter by tags
        explode: true
        in: query
        name: tags
        required: false
        schema:
          items:
            maxLength: 129
            pattern: ^[a-zA-Z0-9_.@-]+:[a-zA-Z0-9_.@-]+$
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoThingCollection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: list things_v2
      tags:
      - things_v2
    put:
      description: Creates a new thing associated to the user
      operationId: things_v2#create
      parameters:
      - description: If true, detach device from the other thing, and attach to this
          thing
        explode: true
        in: query
        name: force
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThingCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ThingCreate'
        description: Payload to create a new thing
        required: true
        x-originalParamName: payload
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoThing'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          description: Unauthorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Conflict
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Precondition Failed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: create things_v2
      tags:
      - things_v2
  /v2/things/{id}:
    delete:
      description: Removes a thing associated to the user
      operationId: things_v2#delete
      parameters:
      - description: If true, hard delete the thing
        explode: true
        in: query
        name: force
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: The id of the thing
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: delete things_v2
      tags:
      - things_v2
    get:
      description: Returns the thing requested by the user
      operationId: things_v2#show
      parameters:
      - description: The id of the thing
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: If true, shows the soft deleted thing
        explode: true
        in: query
        name: show_deleted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoThing'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: show things_v2
      tags:
      - things_v2
    post:
      description: Updates a thing associated to the user
      operationId: things_v2#update
      parameters:
      - description: If true, detach device from the other thing, and attach to this
          thing
        explode: true
        in: query
        name: force
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: The id of the thing
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/thingUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/thingUpdate'
        description: Payload to update an existing thing
        required: true
        x-originalParamName: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoThing'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Conflict
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Precondition Failed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: update things_v2
      tags:
      - things_v2
  /v2/things/{id}/properties:
    get:
      description: Returns the list of properties associated to the thing
      operationId: properties_v2#list
      parameters:
      - description: The id of the thing
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: If true, shows the soft deleted properties
        explode: true
        in: query
        name: show_deleted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoPropertyCollection'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: list properties_v2
      tags:
      - properties_v2
    put:
      description: Creates a new property associated to a thing
      operationId: properties_v2#create
      parameters:
      - description: The id of the thing
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/property'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/property'
        description: PropertyPayload describes a property of a thing. No field is
          mandatory
        required: true
        x-originalParamName: payload
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoProperty'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "404":
          description: Not Found
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Precondition Failed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: create properties_v2
      tags:
      - properties_v2
  /v2/things/{id}/properties/{pid}:
    delete:
      description: Removes a property associated to a thing
      operationId: properties_v2#delete
      parameters:
      - description: If true, hard delete the property
        explode: true
        in: query
        name: force
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: The id of the thing
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the property
        explode: false
        in: path
        name: pid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: delete properties_v2
      tags:
      - properties_v2
    get:
      description: Returns the property requested by the user
      operationId: properties_v2#show
      parameters:
      - description: The id of the thing
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the property
        explode: false
        in: path
        name: pid
        required: true
        schema:
          type: string
        style: simple
      - description: If true, shows the soft deleted properties
        explode: true
        in: query
        name: show_deleted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoProperty'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: show properties_v2
      tags:
      - properties_v2
    post:
      description: Updates a property associated to a thing
      operationId: properties_v2#update
      parameters:
      - description: The id of the thing
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the property
        explode: false
        in: path
        name: pid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/property'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/property'
        description: PropertyPayload describes a property of a thing. No field is
          mandatory
        required: true
        x-originalParamName: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoProperty'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: update properties_v2
      tags:
      - properties_v2
  /v2/things/{id}/properties/{pid}/publish:
    put:
      description: Publish a property value to MQTT
      operationId: properties_v2#publish
      parameters:
      - description: The id of the thing
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the property
        explode: false
        in: path
        name: pid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/propertyValue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/propertyValue'
        description: PropertyValuePayload describes a property value
        required: true
        x-originalParamName: payload
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: publish properties_v2
      tags:
      - properties_v2
  /v2/things/{id}/properties/{pid}/timeseries:
    get:
      description: 'Get numerical property''s historic data binned on a specified
        time interval (note: the total number of data points should NOT be greater
        than 1000 otherwise the result will be truncated)'
      operationId: properties_v2#timeseries
      parameters:
      - description: Whether data's ordering (by time) should be descending
        explode: true
        in: query
        name: desc
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: 'Get data with a timestamp >= to this date (default: 2 weeks
          ago, min: 1842-01-01T00:00:00Z, max: 2242-01-01T00:00:00Z)'
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: The id of the thing
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: 'Binning interval in seconds (defaut: the smallest possible value
          compatibly with the limit of 1000 data points in the response)'
        explode: true
        in: query
        name: interval
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: ID of a numerical property
        explode: false
        in: path
        name: pid
        required: true
        schema:
          type: string
        style: simple
      - description: 'Get data with a timestamp < to this date (default: now, min:
          1842-01-01T00:00:00Z, max: 2242-01-01T00:00:00Z)'
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoTimeseriesmedia'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: timeseries properties_v2
      tags:
      - properties_v2
  /v2/things/{id}/sketch:
    delete:
      operationId: things_v2#deleteSketch
      parameters:
      - description: The id of the thing
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoThing'
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: deleteSketch things_v2
      tags:
      - things_v2
    put:
      description: Creates a new sketch thing associated to the thing
      operationId: things_v2#createSketch
      parameters:
      - description: The id of the thing
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/thingSketch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/thingSketch'
        description: ThingSketchPayload describes a sketch of a thing
        required: true
        x-originalParamName: payload
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoThing'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Precondition Failed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: createSketch things_v2
      tags:
      - things_v2
  /v2/things/{id}/sketch/{sketchId}:
    put:
      description: Update an existing thing sketch
      operationId: things_v2#updateSketch
      parameters:
      - description: The id of the thing
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the sketch
        explode: false
        in: path
        name: sketchId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateSketch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/updateSketch'
        x-originalParamName: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoThing'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Not Found
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Precondition Failed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: updateSketch things_v2
      tags:
      - things_v2
  /v2/things/{id}/tags:
    get:
      description: List tags associated to the thing.
      operationId: things_v2_tags#list
      parameters:
      - description: The id of the thing
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArduinoTags'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: list things_v2_tags
      tags:
      - things_v2_tags
    put:
      description: Creates or updates a tag associated to the thing.
      operationId: things_v2_tags#upsert
      parameters:
      - description: The id of the thing
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/tag'
        required: true
        x-originalParamName: payload
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: upsert things_v2_tags
      tags:
      - things_v2_tags
  /v2/things/{id}/tags/{key}:
    delete:
      description: Delete a tag associated to the thing given its key.
      operationId: things_v2_tags#delete
      parameters:
      - description: The id of the thing
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The key of the tag
        explode: false
        in: path
        name: key
        required: true
        schema:
          maxLength: 64
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal Server Error
      security:
      - oauth2: []
      summary: delete things_v2_tags
      tags:
      - things_v2_tags
components:
  callbacks: {}
  examples: {}
  headers: {}
  links: {}
  parameters: {}
  requestBodies:
    inline_object:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object'
  responses:
    Accepted:
      description: Accepted
    BadRequest:
      description: Bad Request
    NotFound:
      description: Not Found
    NotImplemented:
      description: Not Implemented
    OK:
      description: OK
    Unauthorized:
      description: Unauthorized
  schemas:
    ArduinoCompressedv2:
      description: compressed contains the info from which to generate the certificate
        (default view)
      example:
        not_after: 2000-01-23T04:56:07.000+00:00
        serial: serial
        signature: signature
        not_before: 2000-01-23T04:56:07.000+00:00
        signature_asn1_x: signature_asn1_x
        signature_asn1_y: signature_asn1_y
        authority_key_identifier: authority_key_identifier
      properties:
        authority_key_identifier:
          description: The Authority Key Identifier of the certificate
          type: string
        not_after:
          description: The ending date of the certificate
          format: date-time
          type: string
        not_before:
          description: The starting date of the certificate
          format: date-time
          type: string
        serial:
          description: The serial number of the certificate
          type: string
        signature:
          description: The signature of the certificate
          type: string
        signature_asn1_x:
          description: The ASN1 X component of certificate signature
          type: string
        signature_asn1_y:
          description: The ASN1 Y component of certificate signature
          type: string
      required:
      - not_after
      - not_before
      - serial
      - signature
      - signature_asn1_x
      - signature_asn1_y
      title: 'Mediatype identifier: application/vnd.arduino.compressedv2; view=default'
      type: object
    ArduinoDashboardshare:
      description: ArduinoDashboardshare media type (default view)
      example:
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        username: username
      properties:
        user_id:
          description: The userID of the user you want to share the dashboard with
          format: uuid
          type: string
        username:
          description: The username of the user you want to share the dashboard with
          type: string
      required:
      - user_id
      - username
      title: 'Mediatype identifier: application/vnd.arduino.dashboardshare+json; view=default'
      type: object
    ArduinoDashboardshareCollection:
      description: ArduinoDashboardshareCollection is the media type for an array
        of ArduinoDashboardshare (default view)
      items:
        $ref: '#/components/schemas/ArduinoDashboardshare'
      title: 'Mediatype identifier: application/vnd.arduino.dashboardshare+json; type=collection;
        view=default'
      type: array
    ArduinoDashboardv2:
      description: Dashboard is a collection of widgets (default view)
      example:
        shared_with:
        - user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          username: username
        - user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          username: username
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        shared_by:
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          username: username
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        widgets:
        - height_mobile: 6
          y_mobile: 3
          variables:
          - thing_name: thing_name
            last_value: ""
            thing_timezone:
              offset: 1
              name: name
              until: 2000-01-23T04:56:07.000+00:00
            thing_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            permission: permission
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            variable_name: variable_name
            last_value_updated_at: 2000-01-23T04:56:07.000+00:00
            type: type
          - thing_name: thing_name
            last_value: ""
            thing_timezone:
              offset: 1
              name: name
              until: 2000-01-23T04:56:07.000+00:00
            thing_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            permission: permission
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            variable_name: variable_name
            last_value_updated_at: 2000-01-23T04:56:07.000+00:00
            type: type
          type: slider, gauge
          x_mobile: 7
          width_mobile: 5
          has_permission_incompatibility: true
          has_unlinked_variable: true
          name: name
          options:
            key: '{}'
          width: 5
          x: 2
          has_type_incompatibility: true
          y: 9
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          height: 0
        - height_mobile: 6
          y_mobile: 3
          variables:
          - thing_name: thing_name
            last_value: ""
            thing_timezone:
              offset: 1
              name: name
              until: 2000-01-23T04:56:07.000+00:00
            thing_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            permission: permission
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            variable_name: variable_name
            last_value_updated_at: 2000-01-23T04:56:07.000+00:00
            type: type
          - thing_name: thing_name
            last_value: ""
            thing_timezone:
              offset: 1
              name: name
              until: 2000-01-23T04:56:07.000+00:00
            thing_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            permission: permission
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            variable_name: variable_name
            last_value_updated_at: 2000-01-23T04:56:07.000+00:00
            type: type
          type: slider, gauge
          x_mobile: 7
          width_mobile: 5
          has_permission_incompatibility: true
          has_unlinked_variable: true
          name: name
          options:
            key: '{}'
          width: 5
          x: 2
          has_type_incompatibility: true
          y: 9
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          height: 0
      properties:
        id:
          description: The friendly name of the dashboard
          format: uuid
          type: string
        name:
          description: The friendly name of the dashboard
          type: string
        shared_by:
          $ref: '#/components/schemas/ArduinoDashboardshare'
        shared_with:
          description: ArduinoDashboardshareCollection is the media type for an array
            of ArduinoDashboardshare (default view)
          items:
            $ref: '#/components/schemas/ArduinoDashboardshare'
          title: 'Mediatype identifier: application/vnd.arduino.dashboardshare+json;
            type=collection; view=default'
          type: array
        updated_at:
          description: Last update date
          format: date-time
          type: string
        widgets:
          description: ArduinoWidgetv2Collection is the media type for an array of
            ArduinoWidgetv2 (default view)
          items:
            $ref: '#/components/schemas/ArduinoWidgetv2'
          title: 'Mediatype identifier: application/vnd.arduino.widgetv2+json; type=collection;
            view=default'
          type: array
      required:
      - id
      - name
      - updated_at
      title: 'Mediatype identifier: application/vnd.arduino.dashboardv2+json; view=default'
      type: object
    ArduinoDashboardv2Collection:
      description: ArduinoDashboardv2Collection is the media type for an array of
        ArduinoDashboardv2 (default view)
      items:
        $ref: '#/components/schemas/ArduinoDashboardv2'
      title: 'Mediatype identifier: application/vnd.arduino.dashboardv2+json; type=collection;
        view=default'
      type: array
    ArduinoDevicev2:
      description: ArduinoDevicev2 media type (default view)
      example:
        metadata:
          key: '{}'
        fqbn: fqbn
        created_at: 2000-01-23T04:56:07.000+00:00
        ota_compatible: true
        wifi_fw_version: wifi_fw_version
        label: label
        type: type
        required_wifi_fw_version: required_wifi_fw_version
        tags:
          key: '{}'
        latest_wifi_fw_version: latest_wifi_fw_version
        serial: serial
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        webhooks:
        - active: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uri: https://openapi-generator.tech
        - active: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uri: https://openapi-generator.tech
        last_activity_at: 2000-01-23T04:56:07.000+00:00
        name: name
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        thing:
          device_fqbn: device_fqbn
          device_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          timezone: timezone
          webhook_uri: webhook_uri
          sketch_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          created_at: 2000-01-23T04:56:07.000+00:00
          device_type: device_type
          deleted_at: 2000-01-23T04:56:07.000+00:00
          tags:
            key: '{}'
          device_name: device_name
          properties_count: 5
          updated_at: 2000-01-23T04:56:07.000+00:00
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          webhook_active: true
          properties:
          - last_value: ""
            created_at: 2000-01-23T04:56:07.000+00:00
            permission: permission
            type: type
            deleted_at: 2000-01-23T04:56:07.000+00:00
            value_updated_at: 2000-01-23T04:56:07.000+00:00
            min_value: 6.027456183070403
            thing_name: thing_name
            update_strategy: update_strategy
            updated_at: 2000-01-23T04:56:07.000+00:00
            thing_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            update_parameter: 5.962133916683182
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            persist: true
            tag: 1.4658129805029452
            variable_name: variable_name
            sync_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            max_value: 0.8008281904610115
          - last_value: ""
            created_at: 2000-01-23T04:56:07.000+00:00
            permission: permission
            type: type
            deleted_at: 2000-01-23T04:56:07.000+00:00
            value_updated_at: 2000-01-23T04:56:07.000+00:00
            min_value: 6.027456183070403
            thing_name: thing_name
            update_strategy: update_strategy
            updated_at: 2000-01-23T04:56:07.000+00:00
            thing_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            update_parameter: 5.962133916683182
            href: href
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            persist: true
            tag: 1.4658129805029452
            variable_name: variable_name
            sync_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            max_value: 0.8008281904610115
        events:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          value: ""
        - updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          value: ""
        ota_available: true
      properties:
        created_at:
          description: Creation date of the device
          format: date-time
          type: string
        events:
          description: ArduinoDevicev2SimplePropertiesCollection is the media type
            for an array of ArduinoDevicev2SimpleProperties (default view)
          items:
            $ref: '#/components/schemas/ArduinoDevicev2SimpleProperties'
          title: 'Mediatype identifier: application/vnd.arduino.devicev2.simple.properties+json;
            type=collection; view=default'
          type: array
        fqbn:
          description: The fully qualified board name
          type: string
        href:
          description: The api reference of this device
          type: string
        id:
          description: The arn of the device
          format: uuid
          type: string
        label:
          description: The label of the device
          type: string
        last_activity_at:
          description: Last activity date
          format: date-time
          type: string
        latest_wifi_fw_version:
          description: The latest version of the NINA/WIFI101 firmware available for
            this device
          type: string
        metadata:
          additionalProperties: true
          description: The metadata of the device
          type: object
        name:
          description: The friendly name of the device
          type: string
        ota_available:
          description: True if the device type is ready to receive OTA updated
          type: boolean
        ota_compatible:
          description: True if the device type is OTA compatible
          type: boolean
        required_wifi_fw_version:
          description: The required version of the NINA/WIFI101 firmware needed by
            IoT Cloud
          type: string
        serial:
          description: The serial uuid of the device
          type: string
        tags:
          additionalProperties: true
          description: Tags belonging to the device
          type: object
        thing:
          $ref: '#/components/schemas/ArduinoThing'
        type:
          description: The type of the device
          type: string
        user_id:
          description: The id of the user
          format: uuid
          type: string
        webhooks:
          description: ArduinoDevicev2WebhookCollection is the media type for an array
            of ArduinoDevicev2Webhook (default view)
          items:
            $ref: '#/components/schemas/ArduinoDevicev2Webhook'
          title: 'Mediatype identifier: application/vnd.arduino.devicev2.webhook+json;
            type=collection; view=default'
          type: array
        wifi_fw_version:
          description: The version of the NINA/WIFI101 firmware running on the device
          type: string
      required:
      - href
      - id
      - label
      - name
      - serial
      - type
      - user_id
      title: 'Mediatype identifier: application/vnd.arduino.devicev2+json; view=default'
      type: object
    ArduinoDevicev2Cert:
      description: DeviceCertV2 describes a certificate associated to the device (default
        view)
      example:
        der: der
        device_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        pem: "-----BEGIN CERTIFICATE-----\n\t\t\tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAryQICCl6NZ5gDKrnSztO\n\
          \t\t\t3Hy8PEUcuyvg/ikC+VcIo2SFFSf18a3IMYldIugqqqZCs4/4uVW3sbdLs/6PfgdX\n\
          \t\t\t7O9D22ZiFWHPYA2k2N744MNiCD1UE+tJyllUhSblK48bn+v1oZHCM0nYQ2NqUkvS\n\
          \t\t\tj+hwUU3RiWl7x3D2s9wSdNt7XUtW05a/FXehsPSiJfKvHJJnGOX0BgTvkLnkAOTd\n\
          \t\t\tOrUZ/wK69Dzu4IvrN4vs9Nes8vbwPa/ddZEzGR0cQMt0JBkhk9kU/qwqUseP1QRJ\n\
          \t\t\t5I1jR4g8aYPL/ke9K35PxZWuDp3U0UPAZ3PjFAh+5T+fc7gzCs9dPzSHloruU+gl\n\
          \t\t\tFQIDAQAB\n\t\t\t-----END CERTIFICATE-----"
        compressed:
          not_after: 2000-01-23T04:56:07.000+00:00
          serial: serial
          signature: signature
          not_before: 2000-01-23T04:56:07.000+00:00
          signature_asn1_x: signature_asn1_x
          signature_asn1_y: signature_asn1_y
          authority_key_identifier: authority_key_identifier
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ca: ca
        enabled: true
      properties:
        ca:
          description: The Certification Authority used to sign the certificate
          type: string
        compressed:
          $ref: '#/components/schemas/ArduinoCompressedv2'
        der:
          description: The certificate in DER format
          type: string
        device_id:
          description: The unique identifier of the device
          format: uuid
          type: string
        enabled:
          default: true
          description: Whether the certificate is enabled
          type: boolean
        href:
          description: The api reference of this cert
          type: string
        id:
          description: The unique identifier of the key
          format: uuid
          type: string
        pem:
          description: The certificate in pem format
          example: "-----BEGIN CERTIFICATE-----\n\t\t\tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAryQICCl6NZ5gDKrnSztO\n\
            \t\t\t3Hy8PEUcuyvg/ikC+VcIo2SFFSf18a3IMYldIugqqqZCs4/4uVW3sbdLs/6PfgdX\n\
            \t\t\t7O9D22ZiFWHPYA2k2N744MNiCD1UE+tJyllUhSblK48bn+v1oZHCM0nYQ2NqUkvS\n\
            \t\t\tj+hwUU3RiWl7x3D2s9wSdNt7XUtW05a/FXehsPSiJfKvHJJnGOX0BgTvkLnkAOTd\n\
            \t\t\tOrUZ/wK69Dzu4IvrN4vs9Nes8vbwPa/ddZEzGR0cQMt0JBkhk9kU/qwqUseP1QRJ\n\
            \t\t\t5I1jR4g8aYPL/ke9K35PxZWuDp3U0UPAZ3PjFAh+5T+fc7gzCs9dPzSHloruU+gl\n\
            \t\t\tFQIDAQAB\n\t\t\t-----END CERTIFICATE-----"
          maxLength: 512
          type: string
      required:
      - compressed
      - der
      - device_id
      - enabled
      - href
      - id
      - pem
      title: 'Mediatype identifier: application/vnd.arduino.devicev2.cert+json; view=default'
      type: object
    ArduinoDevicev2CertCollection:
      description: ArduinoDevicev2CertCollection is the media type for an array of
        ArduinoDevicev2Cert (default view)
      items:
        $ref: '#/components/schemas/ArduinoDevicev2Cert'
      title: 'Mediatype identifier: application/vnd.arduino.devicev2.cert+json; type=collection;
        view=default'
      type: array
    ArduinoDevicev2Collection:
      description: ArduinoDevicev2Collection is the media type for an array of ArduinoDevicev2
        (default view)
      items:
        $ref: '#/components/schemas/ArduinoDevicev2'
      title: 'Mediatype identifier: application/vnd.arduino.devicev2+json; type=collection;
        view=default'
      type: array
    ArduinoDevicev2EventProperties:
      description: ArduinoDevicev2EventProperties media type (default view)
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        events:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          value: ""
        - updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          value: ""
      properties:
        events:
          description: ArduinoDevicev2SimplePropertiesCollection is the media type
            for an array of ArduinoDevicev2SimpleProperties (default view)
          items:
            $ref: '#/components/schemas/ArduinoDevicev2SimpleProperties'
          title: 'Mediatype identifier: application/vnd.arduino.devicev2.simple.properties+json;
            type=collection; view=default'
          type: array
        id:
          description: The device of the property
          format: uuid
          type: string
      required:
      - events
      - id
      title: 'Mediatype identifier: application/vnd.arduino.devicev2.event.properties+json;
        view=default'
      type: object
    ArduinoDevicev2Pass:
      description: DeviceCertV2 describes a password associated to a device (default
        view)
      example:
        set: true
        suggested_password: suggested_password
      properties:
        set:
          description: Whether the password is set or not
          type: boolean
        suggested_password:
          description: A random suggested password
          type: string
      required:
      - set
      title: 'Mediatype identifier: application/vnd.arduino.devicev2.pass+json; view=default'
      type: object
    ArduinoDevicev2SimpleProperties:
      description: ArduinoDevicev2SimpleProperties media type (default view)
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        value: ""
      properties:
        name:
          description: The name of the property
          type: string
        updated_at:
          description: Update date of the property
          format: date-time
          type: string
        value:
          description: Value of the property
      required:
      - name
      - updated_at
      - value
      title: 'Mediatype identifier: application/vnd.arduino.devicev2.simple.properties+json;
        view=default'
      type: object
    ArduinoDevicev2SimplePropertiesCollection:
      description: ArduinoDevicev2SimplePropertiesCollection is the media type for
        an array of ArduinoDevicev2SimpleProperties (default view)
      items:
        $ref: '#/components/schemas/ArduinoDevicev2SimpleProperties'
      title: 'Mediatype identifier: application/vnd.arduino.devicev2.simple.properties+json;
        type=collection; view=default'
      type: array
    ArduinoDevicev2Webhook:
      description: DeviceWebhookV2 describes a webhook associated to the device (default
        view)
      example:
        active: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        uri: https://openapi-generator.tech
      properties:
        active:
          default: true
          description: Whether the webhook is active
          type: boolean
        id:
          description: The uuid of the webhook
          format: uuid
          type: string
        uri:
          description: The uri of the webhook
          format: uri
          type: string
      required:
      - id
      - uri
      title: 'Mediatype identifier: application/vnd.arduino.devicev2.webhook+json;
        view=default'
      type: object
    ArduinoDevicev2WebhookCollection:
      description: ArduinoDevicev2WebhookCollection is the media type for an array
        of ArduinoDevicev2Webhook (default view)
      items:
        $ref: '#/components/schemas/ArduinoDevicev2Webhook'
      title: 'Mediatype identifier: application/vnd.arduino.devicev2.webhook+json;
        type=collection; view=default'
      type: array
    ArduinoDevicev2properties:
      description: ArduinoDevicev2properties media type (default view)
      example:
        data_retention_days: 0.8008281904610115
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deviceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        properties:
        - last_value: ""
          created_at: 2000-01-23T04:56:07.000+00:00
          permission: permission
          type: type
          deleted_at: 2000-01-23T04:56:07.000+00:00
          value_updated_at: 2000-01-23T04:56:07.000+00:00
          min_value: 6.027456183070403
          thing_name: thing_name
          update_strategy: update_strategy
          updated_at: 2000-01-23T04:56:07.000+00:00
          thing_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          update_parameter: 5.962133916683182
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          persist: true
          tag: 1.4658129805029452
          variable_name: variable_name
          sync_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          max_value: 0.8008281904610115
        - last_value: ""
          created_at: 2000-01-23T04:56:07.000+00:00
          permission: permission
          type: type
          deleted_at: 2000-01-23T04:56:07.000+00:00
          value_updated_at: 2000-01-23T04:56:07.000+00:00
          min_value: 6.027456183070403
          thing_name: thing_name
          update_strategy: update_strategy
          updated_at: 2000-01-23T04:56:07.000+00:00
          thing_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          update_parameter: 5.962133916683182
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          persist: true
          tag: 1.4658129805029452
          variable_name: variable_name
          sync_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          max_value: 0.8008281904610115
      properties:
        data_retention_days:
          description: How many days the data will be kept
          format: double
          type: number
        deviceId:
          description: The device of the property
          format: uuid
          type: string
        properties:
          description: ArduinoPropertyCollection is the media type for an array of
            ArduinoProperty (default view)
          items:
            $ref: '#/components/schemas/ArduinoProperty'
          title: 'Mediatype identifier: application/vnd.arduino.property+json; type=collection;
            view=default'
          type: array
        user_id:
          description: The user id of the owner
          format: uuid
          type: string
      required:
      - data_retention_days
      - deviceId
      - properties
      - user_id
      title: 'Mediatype identifier: application/vnd.arduino.devicev2properties+json;
        view=default'
      type: object
    ArduinoDevicev2propertyvalue:
      description: ArduinoDevicev2propertyvalue media type (default view)
      example:
        created_at: 2000-01-23T04:56:07.000+00:00
        value:
          seqno: 0
          payload: payload
          statistics:
            rssi: 7.061401241503109
            sf: 3.616076749251911
            modBW: 2.3021358869347655
            seqno: 9.301444243932576
            snr: 2.027123023002322
            channel: 1.4658129805029452
            freq: 5.637376656633329
            duplicate: 5.962133916683182
            time: 4.145608029883936
            adr: 6.027456183070403
      properties:
        created_at:
          format: date-time
          type: string
        value:
          $ref: '#/components/schemas/ArduinoDevicev2propertyvalue_value'
      title: 'Mediatype identifier: application/vnd.arduino.devicev2propertyvalue+json;
        view=default'
      type: object
    ArduinoDevicev2propertyvalueCollection:
      description: ArduinoDevicev2propertyvalueCollection is the media type for an
        array of ArduinoDevicev2propertyvalue (default view)
      items:
        $ref: '#/components/schemas/ArduinoDevicev2propertyvalue'
      title: 'Mediatype identifier: application/vnd.arduino.devicev2propertyvalue+json;
        type=collection; view=default'
      type: array
    ArduinoDevicev2propertyvalues:
      description: ArduinoDevicev2propertyvalues media type (default view)
      example:
        last_evaluated_key:
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
        values:
        - created_at: 2000-01-23T04:56:07.000+00:00
          value:
            seqno: 0
            payload: payload
            statistics:
              rssi: 7.061401241503109
              sf: 3.616076749251911
              modBW: 2.3021358869347655
              seqno: 9.301444243932576
              snr: 2.027123023002322
              channel: 1.4658129805029452
              freq: 5.637376656633329
              duplicate: 5.962133916683182
              time: 4.145608029883936
              adr: 6.027456183070403
        - created_at: 2000-01-23T04:56:07.000+00:00
          value:
            seqno: 0
            payload: payload
            statistics:
              rssi: 7.061401241503109
              sf: 3.616076749251911
              modBW: 2.3021358869347655
              seqno: 9.301444243932576
              snr: 2.027123023002322
              channel: 1.4658129805029452
              freq: 5.637376656633329
              duplicate: 5.962133916683182
              time: 4.145608029883936
              adr: 6.027456183070403
        name: name
        id: id
      properties:
        id:
          type: string
        last_evaluated_key:
          $ref: '#/components/schemas/ArduinoDevicev2propertyvalues_last_evaluated_key'
        name:
          type: string
        values:
          description: ArduinoDevicev2propertyvalueCollection is the media type for
            an array of ArduinoDevicev2propertyvalue (default view)
          items:
            $ref: '#/components/schemas/ArduinoDevicev2propertyvalue'
          title: 'Mediatype identifier: application/vnd.arduino.devicev2propertyvalue+json;
            type=collection; view=default'
          type: array
      required:
      - id
      - last_evaluated_key
      - name
      - values
      title: 'Mediatype identifier: application/vnd.arduino.devicev2propertyvalues+json;
        view=default'
      type: object
    ArduinoLinkedvariable:
      description: ArduinoLinkedvariable media type (default view)
      example:
        thing_name: thing_name
        last_value: ""
        thing_timezone:
          offset: 1
          name: name
          until: 2000-01-23T04:56:07.000+00:00
        thing_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        permission: permission
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        variable_name: variable_name
        last_value_updated_at: 2000-01-23T04:56:07.000+00:00
        type: type
      properties:
        id:
          description: The id of the linked variable
          format: uuid
          type: string
        last_value:
          description: Last value of the linked property
        last_value_updated_at:
          description: Update date of the last value
          format: date-time
          type: string
        name:
          description: The name of the variable
          type: string
        permission:
          description: The permission of the linked variable
          type: string
        thing_id:
          description: The id of the related thing
          format: uuid
          type: string
        thing_name:
          description: The name of the related thing
          type: string
        thing_timezone:
          $ref: '#/components/schemas/ArduinoTimezone'
        type:
          description: The type of the variable
          type: string
        variable_name:
          description: The name of the variable in the code
          type: string
      required:
      - id
      - name
      - permission
      - thing_id
      - thing_name
      - type
      - variable_name
      title: 'Mediatype identifier: application/vnd.arduino.linkedvariable+json; view=default'
      type: object
    ArduinoLinkedvariableCollection:
      description: ArduinoLinkedvariableCollection is the media type for an array
        of ArduinoLinkedvariable (default view)
      items:
        $ref: '#/components/schemas/ArduinoLinkedvariable'
      title: 'Mediatype identifier: application/vnd.arduino.linkedvariable+json; type=collection;
        view=default'
      type: array
    ArduinoLoradevicev1:
      description: ArduinoLoradevicev1 media type (default view)
      example:
        app_key: app_key
        device_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        eui: "71619230301"
        app_eui: app_eui
      properties:
        app_eui:
          description: The eui of the app
          type: string
        app_key:
          description: The key of the device
          type: string
        device_id:
          description: The id of the device
          format: uuid
          type: string
        eui:
          description: The eui of the lora device
          example: "71619230301"
          type: string
      required:
      - app_eui
      - app_key
      - device_id
      - eui
      title: 'Mediatype identifier: application/vnd.arduino.loradevicev1+json; view=default'
      type: object
    ArduinoLorafreqplansv1:
      description: ArduinoLorafreqplansv1 media type (default view)
      example:
        frequency_plans:
        - advanced: true
          name: name
          id: id
        - advanced: true
          name: name
          id: id
      properties:
        frequency_plans:
          description: The list of frequency plans
          items:
            $ref: '#/components/schemas/ArduinoLorafreqplanv1'
          type: array
      title: 'Mediatype identifier: application/vnd.arduino.lorafreqplansv1+json;
        view=default'
      type: object
    ArduinoLorafreqplanv1:
      description: ArduinoLorafreqplanv1 media type (default view)
      example:
        advanced: true
        name: name
        id: id
      properties:
        advanced:
          description: Frequency plan only for advanced users
          type: boolean
        id:
          description: The ID of the frequency paln
          type: string
        name:
          description: The name of the frequency plan
          type: string
      required:
      - advanced
      - id
      - name
      title: 'Mediatype identifier: application/vnd.arduino.lorafreqplanv1+json; view=default'
      type: object
    ArduinoProperty:
      description: ArduinoProperty media type (default view)
      example:
        last_value: ""
        created_at: 2000-01-23T04:56:07.000+00:00
        permission: permission
        type: type
        deleted_at: 2000-01-23T04:56:07.000+00:00
        value_updated_at: 2000-01-23T04:56:07.000+00:00
        min_value: 6.027456183070403
        thing_name: thing_name
        update_strategy: update_strategy
        updated_at: 2000-01-23T04:56:07.000+00:00
        thing_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        update_parameter: 5.962133916683182
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        persist: true
        tag: 1.4658129805029452
        variable_name: variable_name
        sync_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        max_value: 0.8008281904610115
      properties:
        created_at:
          description: Creation date of the property
          format: date-time
          type: string
        deleted_at:
          description: Delete date of the property
          format: date-time
          type: string
        href:
          description: The api reference of this property
          type: string
        id:
          description: The id of the property
          format: uuid
          type: string
        last_value:
          description: Last value of this property
        max_value:
          description: Maximum value of this property
          format: double
          type: number
        min_value:
          description: Minimum value of this property
          format: double
          type: number
        name:
          description: The friendly name of the property
          type: string
        permission:
          description: The permission of the property
          type: string
        persist:
          description: If true, data will persist into a timeseries database
          type: boolean
        sync_id:
          description: The id of the sync pool
          format: uuid
          type: string
        tag:
          description: The integer id of the property
          format: double
          type: number
        thing_id:
          description: The id of the thing
          format: uuid
          type: string
        thing_name:
          description: The name of the associated thing
          type: string
        type:
          description: The type of the property
          type: string
        update_parameter:
          description: The update frequency in seconds, or the amount of the property
            has to change in order to trigger an update
          format: double
          type: number
        update_strategy:
          description: The update strategy for the property value
          type: string
        updated_at:
          description: Update date of the property
          format: date-time
          type: string
        value_updated_at:
          description: Last update timestamp of this property
          format: date-time
          type: string
        variable_name:
          description: The sketch variable name of the property
          type: string
      required:
      - href
      - id
      - name
      - permission
      - thing_id
      - type
      - update_strategy
      title: 'Mediatype identifier: application/vnd.arduino.property+json; view=default'
      type: object
    ArduinoPropertyCollection:
      description: ArduinoPropertyCollection is the media type for an array of ArduinoProperty
        (default view)
      items:
        $ref: '#/components/schemas/ArduinoProperty'
      title: 'Mediatype identifier: application/vnd.arduino.property+json; type=collection;
        view=default'
      type: array
    ArduinoSeriesBatch:
      description: ArduinoSeriesBatch media type (default view)
      example:
        resp_version: 0
        responses:
        - count_values: 6
          resp_version: 5
          times:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          series_limit: 5
          from_date: 2000-01-23T04:56:07.000+00:00
          to_date: 2000-01-23T04:56:07.000+00:00
          query: query
          values:
          - 2.3021358869347655
          - 2.3021358869347655
          interval: 1
          message: message
          status: status
        - count_values: 6
          resp_version: 5
          times:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          series_limit: 5
          from_date: 2000-01-23T04:56:07.000+00:00
          to_date: 2000-01-23T04:56:07.000+00:00
          query: query
          values:
          - 2.3021358869347655
          - 2.3021358869347655
          interval: 1
          message: message
          status: status
      properties:
        resp_version:
          description: Response version
          format: int64
          type: integer
        responses:
          description: Responses of the request
          items:
            $ref: '#/components/schemas/ArduinoSeriesResponse'
          type: array
      required:
      - resp_version
      - responses
      title: 'Mediatype identifier: application/vnd.arduino.series.batch+json; view=default'
      type: object
    ArduinoSeriesRawBatch:
      description: ArduinoSeriesRawBatch media type (default view)
      example:
        resp_version: 0
        responses:
        - count_values: 6
          resp_version: 1
          times:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          series_limit: 5
          from_date: 2000-01-23T04:56:07.000+00:00
          to_date: 2000-01-23T04:56:07.000+00:00
          series:
            metric: metric
          query: query
          values:
          - ""
          - ""
          sort: ASC
          message: message
          status: status
        - count_values: 6
          resp_version: 1
          times:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          series_limit: 5
          from_date: 2000-01-23T04:56:07.000+00:00
          to_date: 2000-01-23T04:56:07.000+00:00
          series:
            metric: metric
          query: query
          values:
          - ""
          - ""
          sort: ASC
          message: message
          status: status
      properties:
        resp_version:
          description: Response version
          format: int64
          type: integer
        responses:
          description: Responses of the request
          items:
            $ref: '#/components/schemas/ArduinoSeriesRawResponse'
          type: array
      required:
      - resp_version
      - responses
      title: 'Mediatype identifier: application/vnd.arduino.series.raw.batch+json;
        view=default'
      type: object
    ArduinoSeriesRawBatchLastvalue:
      description: ArduinoSeriesRawBatchLastvalue media type (default view)
      example:
        responses:
        - count_values: 0
          times:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          thing_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          values:
          - ""
          - ""
          property_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - count_values: 0
          times:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          thing_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          values:
          - ""
          - ""
          property_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: status
      properties:
        responses:
          description: Responses of the request
          items:
            $ref: '#/components/schemas/ArduinoSeriesRawLastValueResponse'
          type: array
        status:
          description: Status of the response
          type: string
      required:
      - responses
      - status
      title: 'Mediatype identifier: application/vnd.arduino.series.raw.batch.lastvalue+json;
        view=default'
      type: object
    ArduinoSeriesRawLastValueResponse:
      description: ArduinoSeriesRawLastValueResponse media type (default view)
      example:
        count_values: 0
        times:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        thing_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        values:
        - ""
        - ""
        property_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        count_values:
          description: Total number of values in the array 'values'
          format: int64
          type: integer
        property_id:
          description: Property id
          format: uuid
          type: string
        thing_id:
          description: Thing id
          format: uuid
          type: string
        times:
          description: Timestamp in RFC3339
          items:
            format: date-time
            type: string
          type: array
        values:
          description: Values can be in Float, String, Bool, Object
          items: {}
          type: array
      required:
      - count_values
      - property_id
      - thing_id
      - times
      - values
      title: 'Mediatype identifier: application/vnd.arduino.series.raw.last.value.response+json;
        view=default'
      type: object
    ArduinoSeriesRawResponse:
      description: ArduinoSeriesRawResponse media type (default view)
      example:
        count_values: 6
        resp_version: 1
        times:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        series_limit: 5
        from_date: 2000-01-23T04:56:07.000+00:00
        to_date: 2000-01-23T04:56:07.000+00:00
        series:
          metric: metric
        query: query
        values:
        - ""
        - ""
        sort: ASC
        message: message
        status: status
      properties:
        count_values:
          description: Total number of values in the array 'values'
          format: int64
          type: integer
        from_date:
          description: From date
          format: date-time
          type: string
        message:
          default: ""
          description: If the response is different than 'ok'
          type: string
        query:
          description: Query of for the data
          type: string
        resp_version:
          description: Response version
          format: int64
          type: integer
        series:
          $ref: '#/components/schemas/BatchQueryRawResponseSeriesMediaV1'
        series_limit:
          description: Max of values
          format: int64
          type: integer
        sort:
          description: Sorting
          enum:
          - ASC
          - DESC
          type: string
        status:
          description: Status of the response
          type: string
        times:
          description: Timestamp in RFC3339
          items:
            format: date-time
            type: string
          type: array
        to_date:
          description: To date
          format: date-time
          type: string
        values:
          description: Values can be in Float, String, Bool, Object
          items: {}
          type: array
      required:
      - count_values
      - from_date
      - query
      - resp_version
      - series
      - sort
      - status
      - times
      - to_date
      - values
      title: 'Mediatype identifier: application/vnd.arduino.series.raw.response+json;
        view=default'
      type: object
    ArduinoSeriesResponse:
      description: ArduinoSeriesResponse media type (default view)
      example:
        count_values: 6
        resp_version: 5
        times:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        series_limit: 5
        from_date: 2000-01-23T04:56:07.000+00:00
        to_date: 2000-01-23T04:56:07.000+00:00
        query: query
        values:
        - 2.3021358869347655
        - 2.3021358869347655
        interval: 1
        message: message
        status: status
      properties:
        count_values:
          description: Total number of values in the array 'values'
          format: int64
          type: integer
        from_date:
          description: From date
          format: date-time
          type: string
        interval:
          description: Resolution in seconds
          format: int64
          type: integer
        message:
          default: ""
          description: If the response is different than 'ok'
          type: string
        query:
          description: Query of for the data
          type: string
        resp_version:
          description: Response version
          format: int64
          type: integer
        series_limit:
          description: Max of values
          format: int64
          type: integer
        status:
          description: Status of the response
          type: string
        times:
          description: Timestamp in RFC3339
          items:
            format: date-time
            type: string
          type: array
        to_date:
          description: To date
          format: date-time
          type: string
        values:
          description: Values in Float
          items:
            format: double
            type: number
          type: array
      required:
      - count_values
      - from_date
      - interval
      - query
      - resp_version
      - status
      - times
      - to_date
      - values
      title: 'Mediatype identifier: application/vnd.arduino.series.response+json;
        view=default'
      type: object
    ArduinoTags:
      description: ArduinoTags media type (default view)
      example:
        tags:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        tags:
          items:
            $ref: '#/components/schemas/tag'
          type: array
      required:
      - tags
      title: 'Mediatype identifier: application/vnd.arduino.tags+json; view=default'
      type: object
    ArduinoThing:
      description: ArduinoThing media type (default view)
      example:
        device_fqbn: device_fqbn
        device_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        timezone: timezone
        webhook_uri: webhook_uri
        sketch_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        created_at: 2000-01-23T04:56:07.000+00:00
        device_type: device_type
        deleted_at: 2000-01-23T04:56:07.000+00:00
        tags:
          key: '{}'
        device_name: device_name
        properties_count: 5
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        href: href
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        webhook_active: true
        properties:
        - last_value: ""
          created_at: 2000-01-23T04:56:07.000+00:00
          permission: permission
          type: type
          deleted_at: 2000-01-23T04:56:07.000+00:00
          value_updated_at: 2000-01-23T04:56:07.000+00:00
          min_value: 6.027456183070403
          thing_name: thing_name
          update_strategy: update_strategy
          updated_at: 2000-01-23T04:56:07.000+00:00
          thing_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          update_parameter: 5.962133916683182
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          persist: true
          tag: 1.4658129805029452
          variable_name: variable_name
          sync_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          max_value: 0.8008281904610115
        - last_value: ""
          created_at: 2000-01-23T04:56:07.000+00:00
          permission: permission
          type: type
          deleted_at: 2000-01-23T04:56:07.000+00:00
          value_updated_at: 2000-01-23T04:56:07.000+00:00
          min_value: 6.027456183070403
          thing_name: thing_name
          update_strategy: update_strategy
          updated_at: 2000-01-23T04:56:07.000+00:00
          thing_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          update_parameter: 5.962133916683182
          href: href
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          persist: true
          tag: 1.4658129805029452
          variable_name: variable_name
          sync_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          max_value: 0.8008281904610115
      properties:
        created_at:
          description: Creation date of the thing
          format: date-time
          type: string
        deleted_at:
          description: Delete date of the thing
          format: date-time
          type: string
        device_fqbn:
          description: The fqbn of the attached device, if any
          type: string
        device_id:
          description: The id of the device
          format: uuid
          type: string
        device_name:
          description: The name of the attached device, if any
          type: string
        device_type:
          description: The type of the attached device, if any
          type: string
        href:
          description: The api reference of this thing
          type: string
        id:
          description: The id of the thing
          format: uuid
          type: string
        name:
          description: The friendly name of the thing
          type: string
        properties:
          description: ArduinoPropertyCollection is the media type for an array of
            ArduinoProperty (default view)
          items:
            $ref: '#/components/schemas/ArduinoProperty'
          title: 'Mediatype identifier: application/vnd.arduino.property+json; type=collection;
            view=default'
          type: array
        properties_count:
          description: The number of properties of the thing
          format: int64
          type: integer
        sketch_id:
          description: The id of the attached sketch
          format: uuid
          type: string
        tags:
          additionalProperties: true
          description: Tags of the thing
          type: object
        timezone:
          description: Time zone of the thing
          type: string
        updated_at:
          description: Update date of the thing
          format: date-time
          type: string
        user_id:
          description: The user id of the owner
          format: uuid
          type: string
        webhook_active:
          description: Webhook uri
          type: boolean
        webhook_uri:
          description: Webhook uri
          type: string
      required:
      - href
      - id
      - name
      - timezone
      - user_id
      title: 'Mediatype identifier: application/vnd.arduino.thing+json; view=default'
      type: object
    ArduinoThingCollection:
      description: ArduinoThingCollection is the media type for an array of ArduinoThing
        (default view)
      items:
        $ref: '#/components/schemas/ArduinoThing'
      title: 'Mediatype identifier: application/vnd.arduino.thing+json; type=collection;
        view=default'
      type: array
    ArduinoTimeseriesmedia:
      description: ArduinoTimeseriesmedia media type (default view)
      example:
        data:
        - time: 2000-01-23T04:56:07.000+00:00
          value: 0.8008281904610115
        - time: 2000-01-23T04:56:07.000+00:00
          value: 0.8008281904610115
      properties:
        data:
          items:
            $ref: '#/components/schemas/TimeseriesDataPoint'
          type: array
      required:
      - data
      title: 'Mediatype identifier: application/vnd.arduino.timeseriesmedia+json;
        view=default'
      type: object
    ArduinoTimezone:
      description: ArduinoTimezone media type (default view)
      example:
        offset: 1
        name: name
        until: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          description: Name of the time zone.
          type: string
        offset:
          description: Current UTC DST offset in seconds.
          format: int64
          type: integer
        until:
          description: Date until the offset is valid.
          format: date-time
          type: string
      required:
      - name
      - offset
      title: 'Mediatype identifier: application/vnd.arduino.timezone+json; view=default'
      type: object
    ArduinoVariableslinks:
      description: ArduinoVariableslinks media type (default view)
      example:
        variables:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        variables:
          description: The ids of the linked variables
          items:
            format: uuid
            type: string
          type: array
      required:
      - variables
      title: 'Mediatype identifier: application/vnd.arduino.variableslinks+json; view=default'
      type: object
    ArduinoWidgetv2:
      description: Widget describes a dashboard widget (default view)
      example:
        height_mobile: 6
        y_mobile: 3
        variables:
        - thing_name: thing_name
          last_value: ""
          thing_timezone:
            offset: 1
            name: name
            until: 2000-01-23T04:56:07.000+00:00
          thing_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          permission: permission
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          variable_name: variable_name
          last_value_updated_at: 2000-01-23T04:56:07.000+00:00
          type: type
        - thing_name: thing_name
          last_value: ""
          thing_timezone:
            offset: 1
            name: name
            until: 2000-01-23T04:56:07.000+00:00
          thing_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          permission: permission
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          variable_name: variable_name
          last_value_updated_at: 2000-01-23T04:56:07.000+00:00
          type: type
        type: slider, gauge
        x_mobile: 7
        width_mobile: 5
        has_permission_incompatibility: true
        has_unlinked_variable: true
        name: name
        options:
          key: '{}'
        width: 5
        x: 2
        has_type_incompatibility: true
        y: 9
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        height: 0
      properties:
        has_permission_incompatibility:
          description: True if the linked variables permissions are incompatible with
            the widget
          type: boolean
        has_type_incompatibility:
          description: True if the linked variables types are incompatible with the
            widget
          type: boolean
        has_unlinked_variable:
          description: If it's true the widget is linked to a soft-deleted variable
          type: boolean
        height:
          description: Widget current height for desktop
          format: int64
          type: integer
        height_mobile:
          description: Widget current height for mobile
          format: int64
          type: integer
        id:
          description: The UUID of the widget, set by client
          format: uuid
          type: string
        name:
          description: The name of the widget
          type: string
        options:
          additionalProperties: true
          description: Widget options
          type: object
        type:
          description: The type of the widget
          enum:
          - slider, gauge
          type: string
        variables:
          description: ArduinoLinkedvariableCollection is the media type for an array
            of ArduinoLinkedvariable (default view)
          items:
            $ref: '#/components/schemas/ArduinoLinkedvariable'
          title: 'Mediatype identifier: application/vnd.arduino.linkedvariable+json;
            type=collection; view=default'
          type: array
        width:
          description: Widget current width for desktop
          format: int64
          type: integer
        width_mobile:
          description: Widget current width for mobile
          format: int64
          type: integer
        x:
          description: Widget x position for desktop
          format: int64
          type: integer
        x_mobile:
          description: Widget x position for mobile
          format: int64
          type: integer
        y:
          description: Widget y position for desktop
          format: int64
          type: integer
        y_mobile:
          description: Widget y position for mobile
          format: int64
          type: integer
      required:
      - height
      - id
      - options
      - type
      - width
      - x
      - "y"
      title: 'Mediatype identifier: application/vnd.arduino.widgetv2+json; view=default'
      type: object
    ArduinoWidgetv2Collection:
      description: ArduinoWidgetv2Collection is the media type for an array of ArduinoWidgetv2
        (default view)
      items:
        $ref: '#/components/schemas/ArduinoWidgetv2'
      title: 'Mediatype identifier: application/vnd.arduino.widgetv2+json; type=collection;
        view=default'
      type: array
    BatchLastValueRequestsMediaV1:
      example:
        requests:
        - thing_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          property_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - thing_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          property_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        requests:
          description: Requests
          items:
            $ref: '#/components/schemas/BatchQueryRawLastValueRequestMediaV1'
          type: array
      required:
      - requests
      title: BatchLastValueRequestsMediaV1
      type: object
    BatchQueryRawLastValueRequestMediaV1:
      example:
        thing_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        property_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        property_id:
          description: Property id
          format: uuid
          type: string
        thing_id:
          description: Thing id
          format: uuid
          type: string
      required:
      - property_id
      - thing_id
      title: BatchQueryRawLastValueRequestMediaV1
      type: object
    BatchQueryRawRequestMediaV1:
      example:
        q: q
        series_limit: 0
        from: 2000-01-23T04:56:07.000+00:00
        sort: DESC
        to: 2000-01-23T04:56:07.000+00:00
      properties:
        from:
          description: From timestamp
          format: date-time
          type: string
        q:
          description: Query
          type: string
        series_limit:
          description: Max of values
          format: int64
          type: integer
        sort:
          default: DESC
          description: Sorting
          enum:
          - ASC
          - DESC
          type: string
        to:
          description: To timestamp
          format: date-time
          type: string
      required:
      - q
      title: BatchQueryRawRequestMediaV1
      type: object
    BatchQueryRawRequestsMediaV1:
      example:
        resp_version: 6
        requests:
        - q: q
          series_limit: 0
          from: 2000-01-23T04:56:07.000+00:00
          sort: DESC
          to: 2000-01-23T04:56:07.000+00:00
        - q: q
          series_limit: 0
          from: 2000-01-23T04:56:07.000+00:00
          sort: DESC
          to: 2000-01-23T04:56:07.000+00:00
      properties:
        requests:
          description: Requests
          items:
            $ref: '#/components/schemas/BatchQueryRawRequestMediaV1'
          type: array
        resp_version:
          description: Response version
          format: int64
          type: integer
      required:
      - requests
      - resp_version
      title: BatchQueryRawRequestsMediaV1
      type: object
    BatchQueryRawResponseSeriesMediaV1:
      example:
        metric: metric
      properties:
        metric:
          description: Metric name
          type: string
      required:
      - metric
      title: BatchQueryRawResponseSeriesMediaV1
      type: object
    BatchQueryRequestMediaV1:
      example:
        q: q
        series_limit: 6
        from: 2000-01-23T04:56:07.000+00:00
        interval: 0
        to: 2000-01-23T04:56:07.000+00:00
      properties:
        from:
          description: From timestamp
          format: date-time
          type: string
        interval:
          description: Resolution in seconds
          format: int64
          type: integer
        q:
          description: Query
          type: string
        series_limit:
          description: Max of values
          format: int64
          type: integer
        to:
          description: To timestamp
          format: date-time
          type: string
      required:
      - from
      - q
      - to
      title: BatchQueryRequestMediaV1
      type: object
    BatchQueryRequestsMediaV1:
      example:
        resp_version: 1
        requests:
        - q: q
          series_limit: 6
          from: 2000-01-23T04:56:07.000+00:00
          interval: 0
          to: 2000-01-23T04:56:07.000+00:00
        - q: q
          series_limit: 6
          from: 2000-01-23T04:56:07.000+00:00
          interval: 0
          to: 2000-01-23T04:56:07.000+00:00
      properties:
        requests:
          description: Requests
          items:
            $ref: '#/components/schemas/BatchQueryRequestMediaV1'
          type: array
        resp_version:
          description: Response version
          format: int64
          type: integer
      required:
      - requests
      - resp_version
      title: BatchQueryRequestsMediaV1
      type: object
    CheckDevicesV2PassPayload:
      example:
        password: password
      properties:
        password:
          description: The password for the device
          type: string
      required:
      - password
      title: CheckDevicesV2PassPayload
      type: object
    CreateDevicesV2CertsPayload:
      example:
        csr: "-----BEGIN CERTIFICATE-----\n\t\t\tMIIBeDCCAR4CAQAwgY0xCzAJBgNVBAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRl\n\
          \t\t\tMQ8wDQYDVQQHEwZNeUNpdHkxFDASBgNVBAoTC0NvbXBhbnkgTHRkMQswCQYDVQQL\n\
          \t\t\tEwJJVDEUMBIGA1UEAxMLZXhhbXBsZS5jb20xHzAdBgkqhkiG9w0BCQEMEHRlc3RA\n\
          \t\t\tZXhhbXBsZS5jb20wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATf6J9Gk79XGJ2I\n\
          \t\t\t+v6p/r0UmPufUcUwtlx7gx87+DaI8Vpj9R5KN71HsHYw5uq+Lm0cr0CZIdtZU4cP\n\
          \t\t\tupd6jDQToC4wLAYJKoZIhvcNAQkOMR8wHTAbBgNVHREEFDASgRB0ZXN0QGV4YW1w\n\
          \t\t\tbGUuY29tMAoGCCqGSM49BAMCA0gAMEUCIGQqtlGzYdjPwYZYJ41albMBcdrKI7+8\n\
          \t\t\toiNSNWyDxJSGAiEAqQPPxMdr6vaXCCjr5s1J01WLKHzGoPFCR40rqAPs8eQ=\n\t\t\
          \t-----END CERTIFICATE-----\n\t\t\t"
        ca: ca
        enabled: true
      properties:
        ca:
          description: The Certification Authority you want to use
          type: string
        csr:
          description: The certificate request in pem format
          example: "-----BEGIN CERTIFICATE-----\n\t\t\tMIIBeDCCAR4CAQAwgY0xCzAJBgNVBAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRl\n\
            \t\t\tMQ8wDQYDVQQHEwZNeUNpdHkxFDASBgNVBAoTC0NvbXBhbnkgTHRkMQswCQYDVQQL\n\
            \t\t\tEwJJVDEUMBIGA1UEAxMLZXhhbXBsZS5jb20xHzAdBgkqhkiG9w0BCQEMEHRlc3RA\n\
            \t\t\tZXhhbXBsZS5jb20wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATf6J9Gk79XGJ2I\n\
            \t\t\t+v6p/r0UmPufUcUwtlx7gx87+DaI8Vpj9R5KN71HsHYw5uq+Lm0cr0CZIdtZU4cP\n\
            \t\t\tupd6jDQToC4wLAYJKoZIhvcNAQkOMR8wHTAbBgNVHREEFDASgRB0ZXN0QGV4YW1w\n\
            \t\t\tbGUuY29tMAoGCCqGSM49BAMCA0gAMEUCIGQqtlGzYdjPwYZYJ41albMBcdrKI7+8\n\
            \t\t\toiNSNWyDxJSGAiEAqQPPxMdr6vaXCCjr5s1J01WLKHzGoPFCR40rqAPs8eQ=\n\t\
            \t\t-----END CERTIFICATE-----\n\t\t\t"
          maxLength: 1024
          type: string
        enabled:
          description: Whether the certificate is enabled
          type: boolean
      required:
      - csr
      - enabled
      title: CreateDevicesV2CertsPayload
      type: object
    CreateDevicesV2Payload:
      description: DeviceV2 describes a device.
      example:
        serial: serial
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        fqbn: fqbn
        name: name
        wifi_fw_version: wifi_fw_version
        type: mkrwifi1010
      properties:
        fqbn:
          description: The fully qualified board name
          type: string
        name:
          description: The friendly name of the device
          maxLength: 64
          pattern: '[a-zA-Z0-9_.@-]+'
          type: string
        serial:
          description: The serial uuid of the device
          maxLength: 64
          pattern: '[a-zA-Z0-9_.@-]+'
          type: string
        type:
          description: The type of the device
          enum:
          - mkrwifi1010
          - mkr1000
          - nano_33_iot
          - mkrgsm1400
          - mkrwan1310
          - mkrwan1300
          - mkrnb1500
          - lora-device
          - login_and_secretkey_wifi
          - envie_m7
          - nanorp2040connect
          type: string
        user_id:
          description: The user_id associated to the device. If absent it will be
            inferred from the authentication header
          format: uuid
          type: string
        wifi_fw_version:
          description: The version of the NINA/WIFI101 firmware running on the device
          maxLength: 10
          pattern: ^(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
          type: string
      required:
      - type
      title: CreateDevicesV2Payload
      type: object
    CreateLoraDevicesV1Payload:
      example:
        app: app
        app_key: app_key
        serial: serial
        user_id: user_id
        eui: eui
        frequency_plan: EU_863_870_TTN
        name: name
        app_eui: app_eui
        type: lora-device
      properties:
        app:
          description: The app name
          type: string
        app_eui:
          description: The app eui of the lora device
          pattern: '[0-9a-z]{16}'
          type: string
        app_key:
          description: The app key of the lora device
          pattern: '[0-9a-z]{16}'
          type: string
        eui:
          description: The eui of the lora device
          pattern: '[0-9a-z]{16}'
          type: string
        frequency_plan:
          description: 'The frequency plan required by your country '
          enum:
          - EU_863_870_TTN
          - US_902_928_FSB_2
          - EU_433
          - AU_915_928_FSB_2
          - CN_470_510_FSB_11
          - AS_920_923
          - AS_920_923_TTN_AU
          - AS_923_925
          - AS_923_925_TTN_AU
          - KR_920_923_TTN
          - IN_865_867
          type: string
        name:
          description: A common name for the device
          type: string
        serial:
          description: The optional serial number
          type: string
        type:
          description: The type of device
          enum:
          - lora-device
          - mkrwan1300
          - mkrwan1310
          type: string
        user_id:
          description: The id of the user. Can be the special string 'me'
          type: string
      required:
      - app
      - eui
      - frequency_plan
      - name
      - type
      - user_id
      title: CreateLoraDevicesV1Payload
      type: object
    HistoricDataRequest:
      example:
        from: 2000-01-23T04:56:07.000+00:00
        to: 2000-01-23T04:56:07.000+00:00
        properties:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        from:
          description: Get data starting from this date
          format: date-time
          type: string
        properties:
          description: IDs of properties
          items:
            format: uuid
            type: string
          minItems: 1
          type: array
        to:
          description: Get data up to this date
          format: date-time
          type: string
      required:
      - from
      - properties
      - to
      title: HistoricDataRequest
      type: object
    ThingCreate:
      description: Payload to create a new thing
      example:
        device_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        timezone: America/New_York
        webhook_uri: webhook_uri
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        webhook_active: true
        properties:
        - min_value: 6.027456183070403
          update_strategy: ON_CHANGE
          name: name
          update_parameter: 5.962133916683182
          permission: READ_ONLY
          persist: false
          tag: 1.4658129805029452
          variable_name: variable_name
          type: ANALOG
          max_value: 0.8008281904610115
        - min_value: 6.027456183070403
          update_strategy: ON_CHANGE
          name: name
          update_parameter: 5.962133916683182
          permission: READ_ONLY
          persist: false
          tag: 1.4658129805029452
          variable_name: variable_name
          type: ANALOG
          max_value: 0.8008281904610115
      properties:
        device_id:
          description: The arn of the associated device
          format: uuid
          type: string
        id:
          description: The id of the thing
          format: uuid
          type: string
        name:
          description: The friendly name of the thing
          maxLength: 64
          pattern: ^[a-zA-Z0-9_.@ -]+$
          type: string
        properties:
          description: The properties of the thing
          items:
            $ref: '#/components/schemas/property'
          type: array
        timezone:
          default: America/New_York
          description: |-
            A time zone name
            Check /v2/timezones for a list of valid names.
          type: string
        webhook_active:
          description: Webhook uri
          type: boolean
        webhook_uri:
          description: Webhook uri
          type: string
      title: ThingCreate
      type: object
    TimeseriesDataPoint:
      example:
        time: 2000-01-23T04:56:07.000+00:00
        value: 0.8008281904610115
      properties:
        time:
          description: Binning timestamp
          format: date-time
          type: string
        value:
          description: Avg value on the binning interval
          format: double
          type: number
      required:
      - time
      - value
      title: TimeseriesDataPoint
      type: object
    dashboardshare:
      properties:
        user_id:
          description: The userID of the user you want to share the dashboard with
          format: uuid
          type: string
        username:
          description: The username of the user you want to share the dashboard with
          type: string
      title: dashboardshare
      type: object
    dashboardv2:
      description: DashboardV2Payload describes a dashboard
      properties:
        name:
          description: The friendly name of the dashboard
          maxLength: 64
          pattern: '[a-zA-Z0-9_.@-]+'
          type: string
        widgets:
          description: Widgets attached to this dashboard
          items:
            $ref: '#/components/schemas/widget'
          type: array
      title: dashboardv2
      type: object
    devicev2:
      description: DeviceV2 describes a device.
      properties:
        fqbn:
          description: The fully qualified board name
          type: string
        name:
          description: The friendly name of the device
          maxLength: 64
          pattern: '[a-zA-Z0-9_.@-]+'
          type: string
        serial:
          description: The serial uuid of the device
          maxLength: 64
          pattern: '[a-zA-Z0-9_.@-]+'
          type: string
        type:
          description: The type of the device
          enum:
          - mkrwifi1010
          - mkr1000
          - nano_33_iot
          - mkrgsm1400
          - mkrwan1310
          - mkrwan1300
          - mkrnb1500
          - lora-device
          - login_and_secretkey_wifi
          - envie_m7
          - nanorp2040connect
          type: string
        user_id:
          description: The user_id associated to the device. If absent it will be
            inferred from the authentication header
          format: uuid
          type: string
        wifi_fw_version:
          description: The version of the NINA/WIFI101 firmware running on the device
          maxLength: 10
          pattern: ^(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
          type: string
      title: devicev2
      type: object
    devicev2.cert:
      properties:
        ca:
          description: The Certification Authority you want to use
          type: string
        csr:
          description: The certificate request in pem format
          example: "-----BEGIN CERTIFICATE-----\n\t\t\tMIIBeDCCAR4CAQAwgY0xCzAJBgNVBAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRl\n\
            \t\t\tMQ8wDQYDVQQHEwZNeUNpdHkxFDASBgNVBAoTC0NvbXBhbnkgTHRkMQswCQYDVQQL\n\
            \t\t\tEwJJVDEUMBIGA1UEAxMLZXhhbXBsZS5jb20xHzAdBgkqhkiG9w0BCQEMEHRlc3RA\n\
            \t\t\tZXhhbXBsZS5jb20wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATf6J9Gk79XGJ2I\n\
            \t\t\t+v6p/r0UmPufUcUwtlx7gx87+DaI8Vpj9R5KN71HsHYw5uq+Lm0cr0CZIdtZU4cP\n\
            \t\t\tupd6jDQToC4wLAYJKoZIhvcNAQkOMR8wHTAbBgNVHREEFDASgRB0ZXN0QGV4YW1w\n\
            \t\t\tbGUuY29tMAoGCCqGSM49BAMCA0gAMEUCIGQqtlGzYdjPwYZYJ41albMBcdrKI7+8\n\
            \t\t\toiNSNWyDxJSGAiEAqQPPxMdr6vaXCCjr5s1J01WLKHzGoPFCR40rqAPs8eQ=\n\t\
            \t\t-----END CERTIFICATE-----\n\t\t\t"
          maxLength: 1024
          type: string
        enabled:
          description: Whether the certificate is enabled
          type: boolean
      title: devicev2.cert
      type: object
    devicev2.otabinaryurl:
      properties:
        async:
          default: true
          description: If false, wait for the full OTA process, until it gets a result
            from the device
          type: boolean
        binary_key:
          description: The object key of the binary
          pattern: ^ota/[a-zA-Z0-9_-]+/[a-zA-Z0-9_-]+.ota$
          type: string
        expire_in_mins:
          default: 10
          description: Binary expire time in minutes, default 10 mins
          format: int64
          type: integer
      required:
      - binary_key
      title: devicev2.otabinaryurl
      type: object
    devicev2.pass:
      properties:
        password:
          description: The password for the device
          type: string
      title: devicev2.pass
      type: object
    error:
      description: Error response media type (default view)
      properties:
        code:
          description: an application-specific error code, expressed as a string value.
          example: invalid_value
          type: string
        detail:
          description: a human-readable explanation specific to this occurrence of
            the problem.
          example: Value of ID must be an integer
          type: string
        id:
          description: a unique identifier for this particular occurrence of the problem.
          example: 3F1FKVRR
          type: string
        meta:
          additionalProperties: true
          description: a meta object containing non-standard meta-information about
            the error.
          example:
            timestamp: 1458609066
          type: object
        status:
          description: the HTTP status code applicable to this problem
          example: 400
          format: int64
          type: integer
      title: 'Mediatype identifier: application/vnd.goa.error+json; view=default'
      type: object
    propertiesValue:
      properties:
        name:
          description: The name of the property
          type: string
        type:
          default: infer
          description: The type of the property
          enum:
          - infer
          - base64
          - hex
          - json
          type: string
        value:
          description: The last value of the property
      required:
      - name
      - type
      - value
      title: propertiesValue
      type: object
    propertiesValues:
      properties:
        input:
          default: false
          description: If true, send property values to device's input topic.
          type: boolean
        properties:
          items:
            $ref: '#/components/schemas/propertiesValue'
          type: array
      required:
      - properties
      title: propertiesValues
      type: object
    property:
      description: PropertyPayload describes a property of a thing. No field is mandatory
      example:
        min_value: 6.027456183070403
        update_strategy: ON_CHANGE
        name: name
        update_parameter: 5.962133916683182
        permission: READ_ONLY
        persist: false
        tag: 1.4658129805029452
        variable_name: variable_name
        type: ANALOG
        max_value: 0.8008281904610115
      properties:
        max_value:
          description: Maximum value of this property
          format: double
          type: number
        min_value:
          description: Minimum value of this property
          format: double
          type: number
        name:
          description: The friendly name of the property
          type: string
        permission:
          description: The permission of the property
          enum:
          - READ_ONLY
          - READ_WRITE
          type: string
        persist:
          default: false
          description: If true, data will persist into a timeseries database
          type: boolean
        tag:
          description: The integer id of the property
          format: double
          type: number
        type:
          description: The type of the property
          enum:
          - ANALOG
          - CHARSTRING
          - FLOAT
          - INT
          - LENGHT_C
          - LENGHT_I
          - LENGHT_M
          - PERCENTAGE
          - STATUS
          - TEMPERATURE_C
          - TEMPERATURE_F
          - METER
          - KILOGRAM
          - GRAM
          - SECOND
          - AMPERE
          - KELVIN
          - CANDELA
          - MOLE
          - HERTZ
          - RADIAN
          - STERADIAN
          - NEWTON
          - PASCAL
          - JOULE
          - WATT
          - COULOMB
          - VOLT
          - FARAD
          - OHM
          - SIEMENS
          - WEBER
          - TESLA
          - HENRY
          - DEGREES_CELSIUS
          - LUMEN
          - LUX
          - BECQUEREL
          - GRAY
          - SIEVERT
          - KATAL
          - SQUARE_METER
          - CUBIC_METER
          - LITER
          - METER_PER_SECOND
          - METER_PER_SQUARE_SECOND
          - CUBIC_METER_PER_SECOND
          - LITER_PER_SECOND
          - WATT_PER_SQUARE_METER
          - CANDELA_PER_SQUARE_METER
          - BIT
          - BIT_PER_SECOND
          - DEGREES_LATITUDE
          - DEGREES_LONGITUDE
          - PH_VALUE
          - DECIBEL
          - DECIBEL_1W
          - BEL
          - COUNT
          - RATIO_DIV
          - RATIO_MOD
          - PERCENTAGE_RELATIVE_HUMIDITY
          - PERCENTAGE_BATTERY_LEVEL
          - SECONDS_BATTERY_LEVEL
          - EVENT_RATE_SECOND
          - EVENT_RATE_MINUTE
          - HEART_RATE
          - HEART_BEATS
          - SIEMENS_PER_METER
          - LOCATION
          - COLOR_HSB
          - COLOR_RGB
          - GENERIC_COMPLEX_PROPERTY
          - HOME_COLORED_LIGHT
          - HOME_DIMMED_LIGHT
          - HOME_LIGHT
          - HOME_CONTACT_SENSOR
          - HOME_MOTION_SENSOR
          - HOME_SMART_PLUG
          - HOME_TEMPERATURE
          - HOME_TEMPERATURE_C
          - HOME_TEMPERATURE_F
          - HOME_SWITCH
          - HOME_TELEVISION
          - ENERGY
          - FORCE
          - TEMPERATURE
          - POWER
          - ELECTRIC_CURRENT
          - ELECTRIC_POTENTIAL
          - ELECTRICAL_RESISTANCE
          - CAPACITANCE
          - TIME
          - FREQUENCY
          - DATA_RATE
          - ACCELERATION
          - AREA
          - LENGTH
          - VELOCITY
          - MASS
          - VOLUME
          - FLOW_RATE
          - ANGLE
          - ILLUMINANCE
          - LUMINOUS_FLUX
          - LUMINANCE
          - LUMINOUS_INTENSITY
          - LOGARITHMIC_QUANTITY
          - PRESSURE
          - INFORMATION_CONTENT
          - SCHEDULE
          type: string
        update_parameter:
          description: The update frequency in seconds, or the amount of the property
            has to change in order to trigger an update
          format: double
          type: number
        update_strategy:
          description: The update strategy for the property value
          enum:
          - ON_CHANGE
          - TIMED
          type: string
        variable_name:
          description: The  sketch variable name of the property
          maxLength: 64
          pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
          type: string
      required:
      - name
      - permission
      - type
      - update_strategy
      title: property
      type: object
    propertyValue:
      description: PropertyValuePayload describes a property value
      properties:
        device_id:
          description: The device who send the property
          format: uuid
          type: string
        value:
          description: The property value
      required:
      - value
      title: propertyValue
      type: object
    sharerequest:
      properties:
        message:
          description: The message the user want to send to the dashboard owner
          type: string
      title: sharerequest
      type: object
    tag:
      example:
        value: value
        key: key
      properties:
        key:
          description: Key of the tag
          maxLength: 64
          pattern: ^[a-zA-Z0-9_.@-]+$
          type: string
        value:
          description: Value of the tag
          maxLength: 64
          pattern: ^[a-zA-Z0-9_.@-]+$
          type: string
      required:
      - key
      - value
      title: tag
      type: object
    thingSketch:
      description: ThingSketchPayload describes a sketch of a thing
      properties:
        sketch_version:
          description: The autogenerated sketch version
          enum:
          - v1
          - v2
          type: string
      title: thingSketch
      type: object
    thingUpdate:
      description: Payload to update an existing thing
      properties:
        device_id:
          description: The arn of the associated device
          format: uuid
          type: string
        id:
          description: The id of the thing
          format: uuid
          type: string
        name:
          description: The friendly name of the thing
          maxLength: 64
          pattern: ^[a-zA-Z0-9_.@ -]+$
          type: string
        properties:
          description: The properties of the thing
          items:
            $ref: '#/components/schemas/property'
          type: array
        timezone:
          description: |-
            A time zone name.
            Check /v2/timezones for a list of valid names.
          type: string
        webhook_active:
          description: Webhook uri
          type: boolean
        webhook_uri:
          description: Webhook uri
          type: string
      title: thingUpdate
      type: object
    updateSketch:
      properties:
        sketch_version:
          description: The autogenerated sketch version
          enum:
          - v1
          - v2
          type: string
      title: updateSketch
      type: object
    widget:
      description: Widget describes a dashboard widget
      properties:
        height:
          description: Widget current height for desktop
          format: int64
          type: integer
        height_mobile:
          description: Widget current height for mobile
          format: int64
          type: integer
        id:
          description: The UUID of the widget, set by client
          format: uuid
          type: string
        name:
          description: The name of the widget
          type: string
        options:
          additionalProperties: true
          description: Widget options
          type: object
        type:
          description: The type of the widget
          type: string
        variables:
          items:
            format: uuid
            type: string
          type: array
        width:
          description: Widget current width for desktop
          format: int64
          type: integer
        width_mobile:
          description: Widget current width for mobile
          format: int64
          type: integer
        x:
          description: Widget x position for desktop
          format: int64
          type: integer
        x_mobile:
          description: Widget x position for mobile
          format: int64
          type: integer
        y:
          description: Widget y position for desktop
          format: int64
          type: integer
        y_mobile:
          description: Widget y position for mobile
          format: int64
          type: integer
      required:
      - height
      - id
      - options
      - type
      - width
      - x
      - "y"
      title: widget
      type: object
    widgetlink:
      properties:
        variables:
          items:
            format: uuid
            type: string
          type: array
      title: widgetlink
      type: object
    inline_object:
      properties:
        async:
          default: true
          description: If false, wait for the full OTA process, until it gets a result
            from the device
          type: boolean
          x-formData-name: async
        expire_in_mins:
          default: 10
          description: Binary expire time in minutes, default 10 mins
          type: integer
          x-formData-name: expire_in_mins
        ota_file:
          description: OTA file
          format: binary
          required:
          - ota_file
          type: string
          x-formData-name: ota_file
      required:
      - ota_file
      type: object
    ArduinoDevicev2propertyvalue_value_statistics:
      example:
        rssi: 7.061401241503109
        sf: 3.616076749251911
        modBW: 2.3021358869347655
        seqno: 9.301444243932576
        snr: 2.027123023002322
        channel: 1.4658129805029452
        freq: 5.637376656633329
        duplicate: 5.962133916683182
        time: 4.145608029883936
        adr: 6.027456183070403
      properties:
        adr:
          format: double
          type: number
        channel:
          format: double
          type: number
        duplicate:
          format: double
          type: number
        freq:
          format: double
          type: number
        modBW:
          format: double
          type: number
        rssi:
          format: double
          type: number
        seqno:
          format: double
          type: number
        sf:
          format: double
          type: number
        snr:
          format: double
          type: number
        time:
          format: double
          type: number
    ArduinoDevicev2propertyvalue_value:
      example:
        seqno: 0
        payload: payload
        statistics:
          rssi: 7.061401241503109
          sf: 3.616076749251911
          modBW: 2.3021358869347655
          seqno: 9.301444243932576
          snr: 2.027123023002322
          channel: 1.4658129805029452
          freq: 5.637376656633329
          duplicate: 5.962133916683182
          time: 4.145608029883936
          adr: 6.027456183070403
      properties:
        payload:
          type: string
        seqno:
          format: int64
          type: integer
        statistics:
          $ref: '#/components/schemas/ArduinoDevicev2propertyvalue_value_statistics'
    ArduinoDevicev2propertyvalues_last_evaluated_key:
      example:
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
      properties:
        created_at:
          format: date-time
          type: string
        id:
          type: string
        name:
          type: string
  securitySchemes:
    oauth2:
      flows:
        clientCredentials:
          scopes:
            iot:devices: Read and write my devices
            iot:things: Read and write my things
          tokenUrl: https://api2.arduino.cc/iot/v1/clients/token
      type: oauth2
