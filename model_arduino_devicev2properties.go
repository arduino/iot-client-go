/*
Arduino IoT Cloud API

 Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iot

import (
	"encoding/json"
)

// checks if the ArduinoDevicev2properties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArduinoDevicev2properties{}

// ArduinoDevicev2properties ArduinoDevicev2properties media type (default view)
type ArduinoDevicev2properties struct {
	// How many days the data will be kept
	DataRetentionDays float64 `json:"data_retention_days"`
	// The device of the property
	DeviceId string `json:"deviceId"`
	// ArduinoPropertyCollection is the media type for an array of ArduinoProperty (default view)
	Properties []ArduinoProperty `json:"properties"`
	// The user id of the owner
	UserId string `json:"user_id"`
}

// NewArduinoDevicev2properties instantiates a new ArduinoDevicev2properties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArduinoDevicev2properties(dataRetentionDays float64, deviceId string, properties []ArduinoProperty, userId string) *ArduinoDevicev2properties {
	this := ArduinoDevicev2properties{}
	this.DataRetentionDays = dataRetentionDays
	this.DeviceId = deviceId
	this.Properties = properties
	this.UserId = userId
	return &this
}

// NewArduinoDevicev2propertiesWithDefaults instantiates a new ArduinoDevicev2properties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArduinoDevicev2propertiesWithDefaults() *ArduinoDevicev2properties {
	this := ArduinoDevicev2properties{}
	return &this
}

// GetDataRetentionDays returns the DataRetentionDays field value
func (o *ArduinoDevicev2properties) GetDataRetentionDays() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.DataRetentionDays
}

// GetDataRetentionDaysOk returns a tuple with the DataRetentionDays field value
// and a boolean to check if the value has been set.
func (o *ArduinoDevicev2properties) GetDataRetentionDaysOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataRetentionDays, true
}

// SetDataRetentionDays sets field value
func (o *ArduinoDevicev2properties) SetDataRetentionDays(v float64) {
	o.DataRetentionDays = v
}

// GetDeviceId returns the DeviceId field value
func (o *ArduinoDevicev2properties) GetDeviceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value
// and a boolean to check if the value has been set.
func (o *ArduinoDevicev2properties) GetDeviceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceId, true
}

// SetDeviceId sets field value
func (o *ArduinoDevicev2properties) SetDeviceId(v string) {
	o.DeviceId = v
}

// GetProperties returns the Properties field value
func (o *ArduinoDevicev2properties) GetProperties() []ArduinoProperty {
	if o == nil {
		var ret []ArduinoProperty
		return ret
	}

	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
func (o *ArduinoDevicev2properties) GetPropertiesOk() ([]ArduinoProperty, bool) {
	if o == nil {
		return nil, false
	}
	return o.Properties, true
}

// SetProperties sets field value
func (o *ArduinoDevicev2properties) SetProperties(v []ArduinoProperty) {
	o.Properties = v
}

// GetUserId returns the UserId field value
func (o *ArduinoDevicev2properties) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *ArduinoDevicev2properties) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *ArduinoDevicev2properties) SetUserId(v string) {
	o.UserId = v
}

func (o ArduinoDevicev2properties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArduinoDevicev2properties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data_retention_days"] = o.DataRetentionDays
	toSerialize["deviceId"] = o.DeviceId
	toSerialize["properties"] = o.Properties
	toSerialize["user_id"] = o.UserId
	return toSerialize, nil
}

type NullableArduinoDevicev2properties struct {
	value *ArduinoDevicev2properties
	isSet bool
}

func (v NullableArduinoDevicev2properties) Get() *ArduinoDevicev2properties {
	return v.value
}

func (v *NullableArduinoDevicev2properties) Set(val *ArduinoDevicev2properties) {
	v.value = val
	v.isSet = true
}

func (v NullableArduinoDevicev2properties) IsSet() bool {
	return v.isSet
}

func (v *NullableArduinoDevicev2properties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArduinoDevicev2properties(val *ArduinoDevicev2properties) *NullableArduinoDevicev2properties {
	return &NullableArduinoDevicev2properties{value: val, isSet: true}
}

func (v NullableArduinoDevicev2properties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArduinoDevicev2properties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


