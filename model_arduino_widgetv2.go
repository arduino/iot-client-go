/*
Arduino IoT Cloud API

 Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iot

import (
	"encoding/json"
)

// checks if the ArduinoWidgetv2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArduinoWidgetv2{}

// ArduinoWidgetv2 Widget describes a dashboard widget (default view)
type ArduinoWidgetv2 struct {
	// True if the linked variables permissions are incompatible with the widget
	HasPermissionIncompatibility *bool `json:"has_permission_incompatibility,omitempty"`
	// True if the linked variables types are incompatible with the widget
	HasTypeIncompatibility *bool `json:"has_type_incompatibility,omitempty"`
	// If it's true the widget is linked to a soft-deleted variable
	HasUnlinkedVariable *bool `json:"has_unlinked_variable,omitempty"`
	// Widget current height for desktop
	Height int64 `json:"height"`
	// Widget current height for mobile
	HeightMobile *int64 `json:"height_mobile,omitempty"`
	// The UUID of the widget, set by client
	Id string `json:"id"`
	// The name of the widget
	Name *string `json:"name,omitempty"`
	// Widget options
	Options map[string]interface{} `json:"options"`
	// The type of the widget
	Type string `json:"type"`
	// ArduinoLinkedvariableCollection is the media type for an array of ArduinoLinkedvariable (default view)
	Variables []ArduinoLinkedvariable `json:"variables,omitempty"`
	// Widget current width for desktop
	Width int64 `json:"width"`
	// Widget current width for mobile
	WidthMobile *int64 `json:"width_mobile,omitempty"`
	// Widget x position for desktop
	X int64 `json:"x"`
	// Widget x position for mobile
	XMobile *int64 `json:"x_mobile,omitempty"`
	// Widget y position for desktop
	Y int64 `json:"y"`
	// Widget y position for mobile
	YMobile *int64 `json:"y_mobile,omitempty"`
}

// NewArduinoWidgetv2 instantiates a new ArduinoWidgetv2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArduinoWidgetv2(height int64, id string, options map[string]interface{}, type_ string, width int64, x int64, y int64) *ArduinoWidgetv2 {
	this := ArduinoWidgetv2{}
	this.Height = height
	this.Id = id
	this.Options = options
	this.Type = type_
	this.Width = width
	this.X = x
	this.Y = y
	return &this
}

// NewArduinoWidgetv2WithDefaults instantiates a new ArduinoWidgetv2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArduinoWidgetv2WithDefaults() *ArduinoWidgetv2 {
	this := ArduinoWidgetv2{}
	return &this
}

// GetHasPermissionIncompatibility returns the HasPermissionIncompatibility field value if set, zero value otherwise.
func (o *ArduinoWidgetv2) GetHasPermissionIncompatibility() bool {
	if o == nil || IsNil(o.HasPermissionIncompatibility) {
		var ret bool
		return ret
	}
	return *o.HasPermissionIncompatibility
}

// GetHasPermissionIncompatibilityOk returns a tuple with the HasPermissionIncompatibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoWidgetv2) GetHasPermissionIncompatibilityOk() (*bool, bool) {
	if o == nil || IsNil(o.HasPermissionIncompatibility) {
		return nil, false
	}
	return o.HasPermissionIncompatibility, true
}

// HasHasPermissionIncompatibility returns a boolean if a field has been set.
func (o *ArduinoWidgetv2) HasHasPermissionIncompatibility() bool {
	if o != nil && !IsNil(o.HasPermissionIncompatibility) {
		return true
	}

	return false
}

// SetHasPermissionIncompatibility gets a reference to the given bool and assigns it to the HasPermissionIncompatibility field.
func (o *ArduinoWidgetv2) SetHasPermissionIncompatibility(v bool) {
	o.HasPermissionIncompatibility = &v
}

// GetHasTypeIncompatibility returns the HasTypeIncompatibility field value if set, zero value otherwise.
func (o *ArduinoWidgetv2) GetHasTypeIncompatibility() bool {
	if o == nil || IsNil(o.HasTypeIncompatibility) {
		var ret bool
		return ret
	}
	return *o.HasTypeIncompatibility
}

// GetHasTypeIncompatibilityOk returns a tuple with the HasTypeIncompatibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoWidgetv2) GetHasTypeIncompatibilityOk() (*bool, bool) {
	if o == nil || IsNil(o.HasTypeIncompatibility) {
		return nil, false
	}
	return o.HasTypeIncompatibility, true
}

// HasHasTypeIncompatibility returns a boolean if a field has been set.
func (o *ArduinoWidgetv2) HasHasTypeIncompatibility() bool {
	if o != nil && !IsNil(o.HasTypeIncompatibility) {
		return true
	}

	return false
}

// SetHasTypeIncompatibility gets a reference to the given bool and assigns it to the HasTypeIncompatibility field.
func (o *ArduinoWidgetv2) SetHasTypeIncompatibility(v bool) {
	o.HasTypeIncompatibility = &v
}

// GetHasUnlinkedVariable returns the HasUnlinkedVariable field value if set, zero value otherwise.
func (o *ArduinoWidgetv2) GetHasUnlinkedVariable() bool {
	if o == nil || IsNil(o.HasUnlinkedVariable) {
		var ret bool
		return ret
	}
	return *o.HasUnlinkedVariable
}

// GetHasUnlinkedVariableOk returns a tuple with the HasUnlinkedVariable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoWidgetv2) GetHasUnlinkedVariableOk() (*bool, bool) {
	if o == nil || IsNil(o.HasUnlinkedVariable) {
		return nil, false
	}
	return o.HasUnlinkedVariable, true
}

// HasHasUnlinkedVariable returns a boolean if a field has been set.
func (o *ArduinoWidgetv2) HasHasUnlinkedVariable() bool {
	if o != nil && !IsNil(o.HasUnlinkedVariable) {
		return true
	}

	return false
}

// SetHasUnlinkedVariable gets a reference to the given bool and assigns it to the HasUnlinkedVariable field.
func (o *ArduinoWidgetv2) SetHasUnlinkedVariable(v bool) {
	o.HasUnlinkedVariable = &v
}

// GetHeight returns the Height field value
func (o *ArduinoWidgetv2) GetHeight() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Height
}

// GetHeightOk returns a tuple with the Height field value
// and a boolean to check if the value has been set.
func (o *ArduinoWidgetv2) GetHeightOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Height, true
}

// SetHeight sets field value
func (o *ArduinoWidgetv2) SetHeight(v int64) {
	o.Height = v
}

// GetHeightMobile returns the HeightMobile field value if set, zero value otherwise.
func (o *ArduinoWidgetv2) GetHeightMobile() int64 {
	if o == nil || IsNil(o.HeightMobile) {
		var ret int64
		return ret
	}
	return *o.HeightMobile
}

// GetHeightMobileOk returns a tuple with the HeightMobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoWidgetv2) GetHeightMobileOk() (*int64, bool) {
	if o == nil || IsNil(o.HeightMobile) {
		return nil, false
	}
	return o.HeightMobile, true
}

// HasHeightMobile returns a boolean if a field has been set.
func (o *ArduinoWidgetv2) HasHeightMobile() bool {
	if o != nil && !IsNil(o.HeightMobile) {
		return true
	}

	return false
}

// SetHeightMobile gets a reference to the given int64 and assigns it to the HeightMobile field.
func (o *ArduinoWidgetv2) SetHeightMobile(v int64) {
	o.HeightMobile = &v
}

// GetId returns the Id field value
func (o *ArduinoWidgetv2) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ArduinoWidgetv2) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ArduinoWidgetv2) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ArduinoWidgetv2) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoWidgetv2) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ArduinoWidgetv2) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ArduinoWidgetv2) SetName(v string) {
	o.Name = &v
}

// GetOptions returns the Options field value
func (o *ArduinoWidgetv2) GetOptions() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value
// and a boolean to check if the value has been set.
func (o *ArduinoWidgetv2) GetOptionsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Options, true
}

// SetOptions sets field value
func (o *ArduinoWidgetv2) SetOptions(v map[string]interface{}) {
	o.Options = v
}

// GetType returns the Type field value
func (o *ArduinoWidgetv2) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ArduinoWidgetv2) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ArduinoWidgetv2) SetType(v string) {
	o.Type = v
}

// GetVariables returns the Variables field value if set, zero value otherwise.
func (o *ArduinoWidgetv2) GetVariables() []ArduinoLinkedvariable {
	if o == nil || IsNil(o.Variables) {
		var ret []ArduinoLinkedvariable
		return ret
	}
	return o.Variables
}

// GetVariablesOk returns a tuple with the Variables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoWidgetv2) GetVariablesOk() ([]ArduinoLinkedvariable, bool) {
	if o == nil || IsNil(o.Variables) {
		return nil, false
	}
	return o.Variables, true
}

// HasVariables returns a boolean if a field has been set.
func (o *ArduinoWidgetv2) HasVariables() bool {
	if o != nil && !IsNil(o.Variables) {
		return true
	}

	return false
}

// SetVariables gets a reference to the given []ArduinoLinkedvariable and assigns it to the Variables field.
func (o *ArduinoWidgetv2) SetVariables(v []ArduinoLinkedvariable) {
	o.Variables = v
}

// GetWidth returns the Width field value
func (o *ArduinoWidgetv2) GetWidth() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Width
}

// GetWidthOk returns a tuple with the Width field value
// and a boolean to check if the value has been set.
func (o *ArduinoWidgetv2) GetWidthOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Width, true
}

// SetWidth sets field value
func (o *ArduinoWidgetv2) SetWidth(v int64) {
	o.Width = v
}

// GetWidthMobile returns the WidthMobile field value if set, zero value otherwise.
func (o *ArduinoWidgetv2) GetWidthMobile() int64 {
	if o == nil || IsNil(o.WidthMobile) {
		var ret int64
		return ret
	}
	return *o.WidthMobile
}

// GetWidthMobileOk returns a tuple with the WidthMobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoWidgetv2) GetWidthMobileOk() (*int64, bool) {
	if o == nil || IsNil(o.WidthMobile) {
		return nil, false
	}
	return o.WidthMobile, true
}

// HasWidthMobile returns a boolean if a field has been set.
func (o *ArduinoWidgetv2) HasWidthMobile() bool {
	if o != nil && !IsNil(o.WidthMobile) {
		return true
	}

	return false
}

// SetWidthMobile gets a reference to the given int64 and assigns it to the WidthMobile field.
func (o *ArduinoWidgetv2) SetWidthMobile(v int64) {
	o.WidthMobile = &v
}

// GetX returns the X field value
func (o *ArduinoWidgetv2) GetX() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.X
}

// GetXOk returns a tuple with the X field value
// and a boolean to check if the value has been set.
func (o *ArduinoWidgetv2) GetXOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.X, true
}

// SetX sets field value
func (o *ArduinoWidgetv2) SetX(v int64) {
	o.X = v
}

// GetXMobile returns the XMobile field value if set, zero value otherwise.
func (o *ArduinoWidgetv2) GetXMobile() int64 {
	if o == nil || IsNil(o.XMobile) {
		var ret int64
		return ret
	}
	return *o.XMobile
}

// GetXMobileOk returns a tuple with the XMobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoWidgetv2) GetXMobileOk() (*int64, bool) {
	if o == nil || IsNil(o.XMobile) {
		return nil, false
	}
	return o.XMobile, true
}

// HasXMobile returns a boolean if a field has been set.
func (o *ArduinoWidgetv2) HasXMobile() bool {
	if o != nil && !IsNil(o.XMobile) {
		return true
	}

	return false
}

// SetXMobile gets a reference to the given int64 and assigns it to the XMobile field.
func (o *ArduinoWidgetv2) SetXMobile(v int64) {
	o.XMobile = &v
}

// GetY returns the Y field value
func (o *ArduinoWidgetv2) GetY() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Y
}

// GetYOk returns a tuple with the Y field value
// and a boolean to check if the value has been set.
func (o *ArduinoWidgetv2) GetYOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Y, true
}

// SetY sets field value
func (o *ArduinoWidgetv2) SetY(v int64) {
	o.Y = v
}

// GetYMobile returns the YMobile field value if set, zero value otherwise.
func (o *ArduinoWidgetv2) GetYMobile() int64 {
	if o == nil || IsNil(o.YMobile) {
		var ret int64
		return ret
	}
	return *o.YMobile
}

// GetYMobileOk returns a tuple with the YMobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoWidgetv2) GetYMobileOk() (*int64, bool) {
	if o == nil || IsNil(o.YMobile) {
		return nil, false
	}
	return o.YMobile, true
}

// HasYMobile returns a boolean if a field has been set.
func (o *ArduinoWidgetv2) HasYMobile() bool {
	if o != nil && !IsNil(o.YMobile) {
		return true
	}

	return false
}

// SetYMobile gets a reference to the given int64 and assigns it to the YMobile field.
func (o *ArduinoWidgetv2) SetYMobile(v int64) {
	o.YMobile = &v
}

func (o ArduinoWidgetv2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArduinoWidgetv2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HasPermissionIncompatibility) {
		toSerialize["has_permission_incompatibility"] = o.HasPermissionIncompatibility
	}
	if !IsNil(o.HasTypeIncompatibility) {
		toSerialize["has_type_incompatibility"] = o.HasTypeIncompatibility
	}
	if !IsNil(o.HasUnlinkedVariable) {
		toSerialize["has_unlinked_variable"] = o.HasUnlinkedVariable
	}
	toSerialize["height"] = o.Height
	if !IsNil(o.HeightMobile) {
		toSerialize["height_mobile"] = o.HeightMobile
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["options"] = o.Options
	toSerialize["type"] = o.Type
	if !IsNil(o.Variables) {
		toSerialize["variables"] = o.Variables
	}
	toSerialize["width"] = o.Width
	if !IsNil(o.WidthMobile) {
		toSerialize["width_mobile"] = o.WidthMobile
	}
	toSerialize["x"] = o.X
	if !IsNil(o.XMobile) {
		toSerialize["x_mobile"] = o.XMobile
	}
	toSerialize["y"] = o.Y
	if !IsNil(o.YMobile) {
		toSerialize["y_mobile"] = o.YMobile
	}
	return toSerialize, nil
}

type NullableArduinoWidgetv2 struct {
	value *ArduinoWidgetv2
	isSet bool
}

func (v NullableArduinoWidgetv2) Get() *ArduinoWidgetv2 {
	return v.value
}

func (v *NullableArduinoWidgetv2) Set(val *ArduinoWidgetv2) {
	v.value = val
	v.isSet = true
}

func (v NullableArduinoWidgetv2) IsSet() bool {
	return v.isSet
}

func (v *NullableArduinoWidgetv2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArduinoWidgetv2(val *ArduinoWidgetv2) *NullableArduinoWidgetv2 {
	return &NullableArduinoWidgetv2{value: val, isSet: true}
}

func (v NullableArduinoWidgetv2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArduinoWidgetv2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


