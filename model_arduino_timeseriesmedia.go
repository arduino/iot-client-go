/*
Arduino IoT Cloud API

Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ArduinoTimeseriesmedia type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArduinoTimeseriesmedia{}

// ArduinoTimeseriesmedia ArduinoTimeseriesmedia media type (default view)
type ArduinoTimeseriesmedia struct {
	Data []TimeseriesDataPoint `json:"data"`
}

// NewArduinoTimeseriesmedia instantiates a new ArduinoTimeseriesmedia object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArduinoTimeseriesmedia(data []TimeseriesDataPoint) *ArduinoTimeseriesmedia {
	this := ArduinoTimeseriesmedia{}
	this.Data = data
	return &this
}

// NewArduinoTimeseriesmediaWithDefaults instantiates a new ArduinoTimeseriesmedia object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArduinoTimeseriesmediaWithDefaults() *ArduinoTimeseriesmedia {
	this := ArduinoTimeseriesmedia{}
	return &this
}

// GetData returns the Data field value
func (o *ArduinoTimeseriesmedia) GetData() []TimeseriesDataPoint {
	if o == nil {
		var ret []TimeseriesDataPoint
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ArduinoTimeseriesmedia) GetDataOk() ([]TimeseriesDataPoint, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *ArduinoTimeseriesmedia) SetData(v []TimeseriesDataPoint) {
	o.Data = v
}

func (o ArduinoTimeseriesmedia) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArduinoTimeseriesmedia) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullableArduinoTimeseriesmedia struct {
	value *ArduinoTimeseriesmedia
	isSet bool
}

func (v NullableArduinoTimeseriesmedia) Get() *ArduinoTimeseriesmedia {
	return v.value
}

func (v *NullableArduinoTimeseriesmedia) Set(val *ArduinoTimeseriesmedia) {
	v.value = val
	v.isSet = true
}

func (v NullableArduinoTimeseriesmedia) IsSet() bool {
	return v.isSet
}

func (v *NullableArduinoTimeseriesmedia) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArduinoTimeseriesmedia(val *ArduinoTimeseriesmedia) *NullableArduinoTimeseriesmedia {
	return &NullableArduinoTimeseriesmedia{value: val, isSet: true}
}

func (v NullableArduinoTimeseriesmedia) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArduinoTimeseriesmedia) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


