/*
Arduino IoT Cloud API

Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v2

import (
	"encoding/json"
)

// checks if the ArduinoDashboardv2template type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArduinoDashboardv2template{}

// ArduinoDashboardv2template ArduinoDashboardv2template media type (default view)
type ArduinoDashboardv2template struct {
	// The cover image of the dashboard
	CoverImage *string `json:"cover_image,omitempty"`
	// The friendly ID of the dashboard
	Id *string `json:"id,omitempty"`
	// The friendly name of the dashboard
	Name string `json:"name"`
	// ArduinoWidgetv2templateCollection is the media type for an array of ArduinoWidgetv2template (default view)
	Widgets []ArduinoWidgetv2template `json:"widgets,omitempty"`
}

// NewArduinoDashboardv2template instantiates a new ArduinoDashboardv2template object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArduinoDashboardv2template(name string) *ArduinoDashboardv2template {
	this := ArduinoDashboardv2template{}
	this.Name = name
	return &this
}

// NewArduinoDashboardv2templateWithDefaults instantiates a new ArduinoDashboardv2template object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArduinoDashboardv2templateWithDefaults() *ArduinoDashboardv2template {
	this := ArduinoDashboardv2template{}
	return &this
}

// GetCoverImage returns the CoverImage field value if set, zero value otherwise.
func (o *ArduinoDashboardv2template) GetCoverImage() string {
	if o == nil || IsNil(o.CoverImage) {
		var ret string
		return ret
	}
	return *o.CoverImage
}

// GetCoverImageOk returns a tuple with the CoverImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoDashboardv2template) GetCoverImageOk() (*string, bool) {
	if o == nil || IsNil(o.CoverImage) {
		return nil, false
	}
	return o.CoverImage, true
}

// HasCoverImage returns a boolean if a field has been set.
func (o *ArduinoDashboardv2template) HasCoverImage() bool {
	if o != nil && !IsNil(o.CoverImage) {
		return true
	}

	return false
}

// SetCoverImage gets a reference to the given string and assigns it to the CoverImage field.
func (o *ArduinoDashboardv2template) SetCoverImage(v string) {
	o.CoverImage = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ArduinoDashboardv2template) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoDashboardv2template) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ArduinoDashboardv2template) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ArduinoDashboardv2template) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *ArduinoDashboardv2template) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ArduinoDashboardv2template) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ArduinoDashboardv2template) SetName(v string) {
	o.Name = v
}

// GetWidgets returns the Widgets field value if set, zero value otherwise.
func (o *ArduinoDashboardv2template) GetWidgets() []ArduinoWidgetv2template {
	if o == nil || IsNil(o.Widgets) {
		var ret []ArduinoWidgetv2template
		return ret
	}
	return o.Widgets
}

// GetWidgetsOk returns a tuple with the Widgets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArduinoDashboardv2template) GetWidgetsOk() ([]ArduinoWidgetv2template, bool) {
	if o == nil || IsNil(o.Widgets) {
		return nil, false
	}
	return o.Widgets, true
}

// HasWidgets returns a boolean if a field has been set.
func (o *ArduinoDashboardv2template) HasWidgets() bool {
	if o != nil && !IsNil(o.Widgets) {
		return true
	}

	return false
}

// SetWidgets gets a reference to the given []ArduinoWidgetv2template and assigns it to the Widgets field.
func (o *ArduinoDashboardv2template) SetWidgets(v []ArduinoWidgetv2template) {
	o.Widgets = v
}

func (o ArduinoDashboardv2template) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArduinoDashboardv2template) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CoverImage) {
		toSerialize["cover_image"] = o.CoverImage
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Widgets) {
		toSerialize["widgets"] = o.Widgets
	}
	return toSerialize, nil
}

type NullableArduinoDashboardv2template struct {
	value *ArduinoDashboardv2template
	isSet bool
}

func (v NullableArduinoDashboardv2template) Get() *ArduinoDashboardv2template {
	return v.value
}

func (v *NullableArduinoDashboardv2template) Set(val *ArduinoDashboardv2template) {
	v.value = val
	v.isSet = true
}

func (v NullableArduinoDashboardv2template) IsSet() bool {
	return v.isSet
}

func (v *NullableArduinoDashboardv2template) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArduinoDashboardv2template(val *ArduinoDashboardv2template) *NullableArduinoDashboardv2template {
	return &NullableArduinoDashboardv2template{value: val, isSet: true}
}

func (v NullableArduinoDashboardv2template) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArduinoDashboardv2template) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


